set .processorId null
set berthaX 325
set berthaY 353
op add *tmp1 @thisx @thisy
op add *tmp3 *tmp1 1
op mul *tmp4 *tmp1 *tmp3
op div *tmp5 *tmp4 2
op add *tmp6 *tmp5 @thisy
op mul *tmp0 *tmp6 1000
op add .idBertha2 *tmp0 1
op add .idShadow *tmp0 2
op add .idLeg1 *tmp0 3
op add .idLeg2 *tmp0 4
op add .idLeg3 *tmp0 5
op add .idLeg4 *tmp0 6
op add .idAim1 *tmp0 7
op add .idAim2 *tmp0 8
op add .idAim3 *tmp0 9
op add .idPanelButton *tmp0 10
op add .idPanel *tmp0 11
op add .idVault *tmp0 12
set .clientState 0
setrate 1000
setmarker remove *tmp0 0 0 0
setmarker remove .idBertha2 0 0 0
setmarker remove .idShadow 0 0 0
setmarker remove .idLeg1 0 0 0
setmarker remove .idLeg2 0 0 0
setmarker remove .idLeg3 0 0 0
setmarker remove .idLeg4 0 0 0
jump 554 equal @server false
jump 33 equal @client false
end
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp151 berthaX 1
op add *tmp154 berthaX 1
op sub *tmp158 berthaY 7
op sub *tmp162 berthaY 5
jump 60 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp152 :mapButton:cursorX *tmp151
op lessThanEq *tmp155 :mapButton:cursorX *tmp154
op land *tmp156 *tmp152 *tmp155
op greaterThanEq *tmp159 :mapButton:cursorY *tmp158
op land *tmp160 *tmp156 *tmp159
op lessThanEq *tmp163 :mapButton:cursorY *tmp162
op land :mapButton:isHovering *tmp160 *tmp163
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp166 :mapButton:isHovering :mapButton:isClicking
jump 55 equal *tmp166 false
set :mapButton*retval 2
jump 61 always 0 0
jump 58 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 61 always 0 0
op add :mapButton:i :mapButton:i 1
jump 40 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
op equal *tmp24 :mapButton*retval 2
op greaterThan *tmp25 @tick .buttonCooldown
op land *tmp26 *tmp24 *tmp25
jump 70 equal *tmp26 false
op add .buttonCooldown @tick 60
jump 69 notEqual .panelOpened 0
set .panelOpened 1
jump 70 always 0 0
set .panelOpened 0
jump 156 equal .panelOpened false
jump 138 notEqual .aimingPlayer null
set :mapButton.1:playerOut .aimingPlayer
fetch playerCount :mapButton.1:playerCount @sharded 0 0
set :mapButton.1:i 0
op sub *tmp43 berthaX 3.7
op sub *tmp46 berthaX 0.7000000000000002
op sub *tmp50 berthaY 12.1
op sub *tmp54 berthaY 11.1
jump 101 greaterThan 0 :mapButton.1:playerCount
fetch player :mapButton.1:player @sharded :mapButton.1:i 0
sensor :mapButton.1:cursorX :mapButton.1:player @shootX
sensor :mapButton.1:cursorY :mapButton.1:player @shootY
op greaterThanEq *tmp44 :mapButton.1:cursorX *tmp43
op lessThanEq *tmp47 :mapButton.1:cursorX *tmp46
op land *tmp48 *tmp44 *tmp47
op greaterThanEq *tmp51 :mapButton.1:cursorY *tmp50
op land *tmp52 *tmp48 *tmp51
op lessThanEq *tmp55 :mapButton.1:cursorY *tmp54
op land :mapButton.1:isHovering *tmp52 *tmp55
sensor :mapButton.1:isClicking :mapButton.1:player @shooting
op land *tmp58 :mapButton.1:isHovering :mapButton.1:isClicking
jump 96 equal *tmp58 false
set :mapButton.1:playerOut :mapButton.1:player
set *tmp36 2
jump 103 always 0 0
jump 99 equal :mapButton.1:isHovering false
set *tmp36 1
jump 103 always 0 0
op add :mapButton.1:i :mapButton.1:i 1
jump 80 lessThanEq :mapButton.1:i :mapButton.1:playerCount
set :mapButton.1:playerOut null
set *tmp36 0
set .aimingPlayer :mapButton.1:playerOut
jump 108 notEqual *tmp36 2
op add .buttonCooldown @tick 60
op add .targetTimeout @tick 600
set .autoMode 0
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op add *tmp151 berthaX 0.6499999999999999
op add *tmp154 berthaX 3.65
jump 133 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp152 :mapButton:cursorX *tmp151
op lessThanEq *tmp155 :mapButton:cursorX *tmp154
op land *tmp156 *tmp152 *tmp155
op greaterThanEq *tmp159 :mapButton:cursorY *tmp50
op land *tmp160 *tmp156 *tmp159
op lessThanEq *tmp163 :mapButton:cursorY *tmp54
op land :mapButton:isHovering *tmp160 *tmp163
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp166 :mapButton:isHovering :mapButton:isClicking
jump 128 equal *tmp166 false
set :mapButton*retval 2
jump 134 always 0 0
jump 131 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 134 always 0 0
op add :mapButton:i :mapButton:i 1
jump 113 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 156 notEqual :mapButton*retval 2
op add .buttonCooldown @tick 60
set .autoMode 1
jump 156 always 0 0
sensor .targetX .aimingPlayer @shootX
sensor .targetY .aimingPlayer @shootY
op notEqual *tmp73 .lastTargetX .targetX
op notEqual *tmp74 .lastTargetY .targetY
op land *tmp75 *tmp73 *tmp74
jump 145 equal *tmp75 false
op add .targetTimeout @tick 600
set .lastTargetX .targetX
set .lastTargetY .targetY
jump 151 lessThanEq @tick .targetTimeout
set .aimingPlayer null
set .targetX null
set .targetY null
sensor *tmp82 .aimingPlayer @shooting
op greaterThan *tmp83 @tick .buttonCooldown
op land *tmp84 *tmp82 *tmp83
jump 156 equal *tmp84 false
set .aimingPlayer null
op equal *tmp86 .autoReady false
op land *tmp87 .autoMode *tmp86
jump 166 equal *tmp87 false
fetch coreCount :server:coreCount @blue 0 0
op rand *tmp90 :server:coreCount 0
op floor :server:randCore *tmp90 0
fetch core :server:coreTarget @blue :server:randCore 0
sensor .targetX :server:coreTarget @x
sensor .targetY :server:coreTarget @y
set .autoReady 1
set .angleTarget -90
jump 172 equal .targetX null
op sub *tmp444 berthaX .targetX
op sub *tmp445 berthaY .targetY
op angle *tmp446 *tmp444 *tmp445
op mod .angleTarget *tmp446 360
op sub *tmp448 .angleTarget .angle
op mod .angleDiff *tmp448 360
jump 176 lessThanEq .angleDiff 180
op sub .angleDiff .angleDiff 360
jump 178 greaterThanEq .angleDiff -180
op add .angleDiff .angleDiff 360
jump 182 lessThanEq .angleDiff 1
op sub *tmp456 @second .angleTime
op mul *tmp457 45 *tmp456
op add .angle .angle *tmp457
jump 186 greaterThanEq .angleDiff -1
op sub *tmp460 @second .angleTime
op mul *tmp461 45 *tmp460
op sub .angle .angle *tmp461
set .angleTime @second
getblock building .vault berthaX berthaY
op abs *tmp99 .angleDiff 0
op lessThan *tmp100 *tmp99 1
op notEqual *tmp101 .targetX null
op land *tmp102 *tmp100 *tmp101
sensor *tmp103 .vault @blast-compound
op greaterThan *tmp104 *tmp103 30
op land *tmp105 *tmp102 *tmp104
op greaterThan *tmp106 @second .berthaCooldown
op land :server:readyToShoot *tmp105 *tmp106
jump 211 equal :server:readyToShoot false
set .shotTrigger 1
sync .shotTrigger
sensor *tmp109 .vault @blast-compound
op sub *tmp110 *tmp109 30
setprop @blast-compound .vault *tmp110
set .lockedTargetX .targetX
set .lockedTargetY .targetY
op sub *tmp113 berthaX .targetX
op sub *tmp114 berthaY .targetY
op len *tmp115 *tmp113 *tmp114
op div *tmp116 *tmp115 120
op add .shotEta @second *tmp116
op add .berthaCooldown @second 4
op greaterThan *tmp119 @second .shotEta
op notEqual *tmp120 .shotEta null
op land *tmp121 *tmp119 *tmp120
jump 242 equal *tmp121 false
set :server:blocked 0
fetch buildCount *tmp124 @sharded 0 @world-processor
set :server:i 0
jump 238 greaterThan 0 *tmp124
fetch build :server:processor @sharded :server:i @world-processor
read *tmp126 :server:processor "structureId"
jump 236 notEqual *tmp126 "floodBarrier"
read :server:barrierX :server:processor "blockX"
read :server:barrierY :server:processor "blockY"
read :server:barrierRadius :server:processor "radius"
read *tmp132 :server:processor ".baseBlock"
sensor :server:deadBlock *tmp132 @dead
op sub *tmp134 .lockedTargetX :server:barrierX
op sub *tmp135 .lockedTargetY :server:barrierY
op len *tmp136 *tmp134 *tmp135
op lessThan *tmp137 *tmp136 :server:barrierRadius
op equal *tmp138 :server:deadBlock false
op land *tmp139 *tmp137 *tmp138
jump 236 equal *tmp139 false
set :server:blocked 1
jump 238 always 0 0
op add :server:i :server:i 1
jump 219 lessThanEq :server:i *tmp124
jump 242 notEqual :server:blocked false
explosion @sharded .lockedTargetX .lockedTargetY 12 3000 1 1 1 true
set .shotEta null
set .autoReady 0
sensor .syncedBlast .vault @blast-compound
sync .syncedBlast
sync .panelOpened
sync .aimingPlayer
sync .targetX
sync .targetY
sync .autoMode
jump 297 notEqual .clientState false
set .berthaDisplayX berthaX
set .berthaDisplayY berthaY
makemarker texture *tmp0 0 0 0
makemarker texture .idBertha2 0 0 0
makemarker texture .idShadow 0 0 0
makemarker texture .idLeg1 0 0 0
makemarker texture .idLeg2 0 0 0
makemarker texture .idLeg3 0 0 0
makemarker texture .idLeg4 0 0 0
setmarker texture *tmp0 0 "titan-barrel-outline" 0
setmarker texture .idBertha2 0 "titan-outline" 0
setmarker texture .idShadow 0 "circle-shadow" 0
setmarker texture .idLeg1 0 "titan-side-l-outline" 0
setmarker texture .idLeg2 0 "titan-side-l-outline" 0
setmarker texture .idLeg3 0 "titan-side-r-outline" 0
setmarker texture .idLeg4 0 "titan-side-r-outline" 0
setmarker textureSize *tmp0 3 7 0
setmarker textureSize .idBertha2 4 8 0
setmarker textureSize .idShadow 8 8 0
setmarker textureSize .idLeg1 6 6 0
setmarker textureSize .idLeg2 6 -6 0
setmarker textureSize .idLeg3 -6 6 0
setmarker textureSize .idLeg4 -6 -6 0
setmarker rotation .idLeg1 45 0 0
setmarker rotation .idLeg2 -45 0 0
setmarker rotation .idLeg3 -45 0 0
setmarker rotation .idLeg4 45 0 0
setmarker color .idShadow %000000a7 0 0
setmarker drawLayer *tmp0 55 0 0
setmarker drawLayer .idBertha2 54.9 0 0
setmarker drawLayer .idShadow 54 0 0
setmarker drawLayer .idLeg1 54.1 0 0
setmarker drawLayer .idLeg2 54.1 0 0
setmarker drawLayer .idLeg3 54.1 0 0
setmarker drawLayer .idLeg4 54.1 0 0
setmarker pos *tmp0 berthaX berthaY 0
setmarker pos .idBertha2 berthaX berthaY 0
op sub *tmp347 berthaY 1
setmarker pos .idShadow berthaX *tmp347 0
op sub *tmp348 berthaX 3
setmarker pos .idLeg1 *tmp348 berthaY 0
op sub *tmp350 berthaY 0.5
setmarker pos .idLeg2 *tmp348 *tmp350 0
op add *tmp351 berthaX 3
setmarker pos .idLeg3 *tmp351 berthaY 0
setmarker pos .idLeg4 *tmp351 *tmp350 0
set .clientState 1
op sub *tmp354 berthaY 6
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp151 berthaX 1
op add *tmp154 berthaX 1
op sub *tmp158 berthaY 7
op sub *tmp162 berthaY 5
jump 325 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp152 :mapButton:cursorX *tmp151
op lessThanEq *tmp155 :mapButton:cursorX *tmp154
op land *tmp156 *tmp152 *tmp155
op greaterThanEq *tmp159 :mapButton:cursorY *tmp158
op land *tmp160 *tmp156 *tmp159
op lessThanEq *tmp163 :mapButton:cursorY *tmp162
op land :mapButton:isHovering *tmp160 *tmp163
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp166 :mapButton:isHovering :mapButton:isClicking
jump 320 equal *tmp166 false
set :mapButton*retval 2
jump 326 always 0 0
jump 323 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 326 always 0 0
op add :mapButton:i :mapButton:i 1
jump 305 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 329 equal :mapButton*retval 0
print "[blue]"
jump 330 always 0 0
print "[white]"
print "[  ]"
makemarker text .idPanelButton 0 0 false
setmarker fontSize .idPanelButton 1.5 0 0
setmarker flushText .idPanelButton 0 0 0
setmarker pos .idPanelButton berthaX *tmp354 0
jump 483 equal .panelOpened false
print "[orange] Big Bertha \n\nTarget:\n\n"
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp151 berthaX 3.7
op sub *tmp154 berthaX 0.7000000000000002
op sub *tmp158 berthaY 12.1
op sub *tmp162 berthaY 11.1
jump 364 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp152 :mapButton:cursorX *tmp151
op lessThanEq *tmp155 :mapButton:cursorX *tmp154
op land *tmp156 *tmp152 *tmp155
op greaterThanEq *tmp159 :mapButton:cursorY *tmp158
op land *tmp160 *tmp156 *tmp159
op lessThanEq *tmp163 :mapButton:cursorY *tmp162
op land :mapButton:isHovering *tmp160 *tmp163
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp166 :mapButton:isHovering :mapButton:isClicking
jump 359 equal *tmp166 false
set :client:targetButton 2
jump 365 always 0 0
jump 362 equal :mapButton:isHovering false
set :client:targetButton 1
jump 365 always 0 0
op add :mapButton:i :mapButton:i 1
jump 344 lessThanEq :mapButton:i :mapButton:playerCount
set :client:targetButton 0
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op add *tmp151 berthaX 0.6499999999999999
op add *tmp154 berthaX 3.65
op sub *tmp158 berthaY 12.1
op sub *tmp162 berthaY 11.1
jump 392 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp152 :mapButton:cursorX *tmp151
op lessThanEq *tmp155 :mapButton:cursorX *tmp154
op land *tmp156 *tmp152 *tmp155
op greaterThanEq *tmp159 :mapButton:cursorY *tmp158
op land *tmp160 *tmp156 *tmp159
op lessThanEq *tmp163 :mapButton:cursorY *tmp162
op land :mapButton:isHovering *tmp160 *tmp163
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp166 :mapButton:isHovering :mapButton:isClicking
jump 387 equal *tmp166 false
set :mapButton*retval 2
jump 393 always 0 0
jump 390 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 393 always 0 0
op add :mapButton:i :mapButton:i 1
jump 372 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 396 equal :client:targetButton 0
print "[blue]"
jump 397 always 0 0
print "[gold]"
print "[ Set ][gold] / "
jump 401 equal :mapButton*retval 0
print "[blue]"
jump 402 always 0 0
print "[gold]"
print "[ Auto ]\n\n"
op equal *tmp370 .aimingPlayer null
op equal *tmp371 .targetX null
op land *tmp372 *tmp370 *tmp371
jump 408 equal *tmp372 false
print "[white]Target not set."
jump 414 equal .targetX null
op ceil *tmp376 .targetX 0
op ceil *tmp377 .targetY 0
print "[white]Target:[red] {0}, {0}\n"
format *tmp376
format *tmp377
jump 420 equal .aimingPlayer null
sensor *tmp380 .aimingPlayer @name
print "[white]{0} is aiming."
format *tmp380
op add .aimTimeout @tick 60
jump 422 always 0 0
jump 422 equal .autoMode false
print "[white]Auto aiming."
print "\n\n"
getblock building .vault berthaX berthaY
sensor *tmp384 .vault @type
jump 434 equal *tmp384 @vault
print "[red] No vault detected!"
makemarker shape .idVault 0 0 false
setmarker shape .idVault 4 0 0
setmarker pos .idVault berthaX berthaY 0
setmarker radius .idVault 16 0 0
setmarker rotation .idVault 45 0 0
setmarker color .idVault %ff636378 0 0
jump 443 always 0 0
sensor :resourceTooltip:ownedResources .vault @blast-compound
set *tmp390 "[green]"
jump 438 lessThanEq 30 :resourceTooltip:ownedResources
set *tmp390 "[red]"
op min *tmp391 :resourceTooltip:ownedResources 30
print *tmp390
print *tmp391
print " / 30 [white]\n"
setmarker remove .idVault 0 0 0
makemarker text .idPanel 0 0 false
setmarker fontSize .idPanel 1.5 0 0
setmarker flushText .idPanel 0 0 0
op sub *tmp392 berthaY 8
setmarker pos .idPanel berthaX *tmp392 0
op notEqual *tmp393 :client:targetButton 0
op notEqual *tmp394 .aimingPlayer null
op or *tmp396 *tmp393 *tmp394
op notEqual *tmp395 *tmp396 false
op lessThan *tmp397 @tick .aimTimeout
op or *tmp399 *tmp395 *tmp397
jump 479 equal *tmp399 false
jump 484 equal .targetX null
op cos *tmp403 .angleTarget 0
op mul *tmp404 *tmp403 7.5
op sub :aimMarker:offSetX berthaX *tmp404
op sin *tmp406 .angleTarget 0
op mul *tmp407 *tmp406 7.5
op sub :aimMarker:offSetY berthaY *tmp407
makemarker line .idAim1 0 0 false
setmarker pos .idAim1 :aimMarker:offSetX :aimMarker:offSetY 0
setmarker endPos .idAim1 .targetX .targetY 0
setmarker drawLayer .idAim1 100 0 0
setmarker stroke .idAim1 2 0 0
setmarker color .idAim1 %ff6363 0 0
makemarker shape .idAim2 0 0 false
setmarker pos .idAim2 :aimMarker:offSetX :aimMarker:offSetY 0
setmarker shape .idAim2 4 1 0
setmarker drawLayer .idAim2 100 0 0
setmarker color .idAim2 %ff6363 0 0
makemarker shape .idAim3 0 0 false
setmarker pos .idAim3 .targetX .targetY 0
setmarker shape .idAim3 4 1 0
setmarker drawLayer .idAim3 100 0 0
setmarker color .idAim3 %ff6363 0 0
jump 484 always 0 0
setmarker remove .idAim1 0 0 0
setmarker remove .idAim2 0 0 0
setmarker remove .idAim3 0 0 0
jump 484 always 0 0
setmarker remove .idPanel 0 0 0
set .angleTarget -90
jump 490 equal .targetX null
op sub *tmp444 berthaX .targetX
op sub *tmp445 berthaY .targetY
op angle *tmp446 *tmp444 *tmp445
op mod .angleTarget *tmp446 360
op sub *tmp448 .angleTarget .angle
op mod .angleDiff *tmp448 360
jump 494 lessThanEq .angleDiff 180
op sub .angleDiff .angleDiff 360
jump 496 greaterThanEq .angleDiff -180
op add .angleDiff .angleDiff 360
jump 500 lessThanEq .angleDiff 1
op sub *tmp456 @second .angleTime
op mul *tmp457 45 *tmp456
op add .angle .angle *tmp457
jump 504 greaterThanEq .angleDiff -1
op sub *tmp460 @second .angleTime
op mul *tmp461 45 *tmp460
op sub .angle .angle *tmp461
set .angleTime @second
op sub :updatePosition:dt @second .displayTime
set .displayTime @second
op sub :updatePosition:dx berthaX .berthaDisplayX
op sub :updatePosition:dy berthaY .berthaDisplayY
op len :updatePosition:dist :updatePosition:dx :updatePosition:dy
jump 522 lessThanEq :updatePosition:dist 0.01
op mul :updatePosition:step 0.75 :updatePosition:dt
jump 516 lessThanEq :updatePosition:step :updatePosition:dist
set .berthaDisplayX berthaX
set .berthaDisplayY berthaY
jump 522 always 0 0
op div :updatePosition:dirX :updatePosition:dx :updatePosition:dist
op div :updatePosition:dirY :updatePosition:dy :updatePosition:dist
op mul *tmp421 :updatePosition:dirX :updatePosition:step
op add .berthaDisplayX .berthaDisplayX *tmp421
op mul *tmp422 :updatePosition:dirY :updatePosition:step
op add .berthaDisplayY .berthaDisplayY *tmp422
op add *tmp423 .angle 90
setmarker rotation *tmp0 *tmp423 0 0
setmarker rotation .idBertha2 *tmp423 0 0
setmarker pos *tmp0 .berthaDisplayX .berthaDisplayY 0
setprop @blast-compound .vault .syncedBlast
jump 31 equal .shotTrigger false
set .shotTrigger 0
op add .berthaCooldown @second 4
op cos *tmp427 .angleTarget 0
op mul *tmp428 *tmp427 1.5
op add .berthaDisplayX berthaX *tmp428
op sin *tmp430 .angleTarget 0
op mul *tmp431 *tmp430 1.5
op add .berthaDisplayY berthaY *tmp431
op mul *tmp434 *tmp427 -4
op add :client:bulletX .berthaDisplayX *tmp434
op mul *tmp437 *tmp430 -4
op add :client:bulletY .berthaDisplayY *tmp437
playsound true @sfx-bang 1 0.5 0 :client:bulletX :client:bulletY 1
op add *tmp439 .angle 180
effect smokeColor :client:bulletX :client:bulletY *tmp439 %ff6363 0
op add *tmp440 .angle 195
effect smokeColor :client:bulletX :client:bulletY *tmp440 %ff6363 0
op add *tmp441 .angle 165
effect smokeColor :client:bulletX :client:bulletY *tmp441 %ff6363 0
write :client:bulletX processor1 ".bulletX"
write :client:bulletY processor1 ".bulletY"
write .targetX processor1 ".targetX"
write .targetY processor1 ".targetY"
write 120 processor1 ".shotSpeed"
write .angleTarget processor1 ".angleTarget"
jump 31 always 0 0
jump 0 equal @client false
jump 603 notEqual .clientState false
set .berthaDisplayX berthaX
set .berthaDisplayY berthaY
makemarker texture *tmp0 0 0 0
makemarker texture .idBertha2 0 0 0
makemarker texture .idShadow 0 0 0
makemarker texture .idLeg1 0 0 0
makemarker texture .idLeg2 0 0 0
makemarker texture .idLeg3 0 0 0
makemarker texture .idLeg4 0 0 0
setmarker texture *tmp0 0 "titan-barrel-outline" 0
setmarker texture .idBertha2 0 "titan-outline" 0
setmarker texture .idShadow 0 "circle-shadow" 0
setmarker texture .idLeg1 0 "titan-side-l-outline" 0
setmarker texture .idLeg2 0 "titan-side-l-outline" 0
setmarker texture .idLeg3 0 "titan-side-r-outline" 0
setmarker texture .idLeg4 0 "titan-side-r-outline" 0
setmarker textureSize *tmp0 3 7 0
setmarker textureSize .idBertha2 4 8 0
setmarker textureSize .idShadow 8 8 0
setmarker textureSize .idLeg1 6 6 0
setmarker textureSize .idLeg2 6 -6 0
setmarker textureSize .idLeg3 -6 6 0
setmarker textureSize .idLeg4 -6 -6 0
setmarker rotation .idLeg1 45 0 0
setmarker rotation .idLeg2 -45 0 0
setmarker rotation .idLeg3 -45 0 0
setmarker rotation .idLeg4 45 0 0
setmarker color .idShadow %000000a7 0 0
setmarker drawLayer *tmp0 55 0 0
setmarker drawLayer .idBertha2 54.9 0 0
setmarker drawLayer .idShadow 54 0 0
setmarker drawLayer .idLeg1 54.1 0 0
setmarker drawLayer .idLeg2 54.1 0 0
setmarker drawLayer .idLeg3 54.1 0 0
setmarker drawLayer .idLeg4 54.1 0 0
setmarker pos *tmp0 berthaX berthaY 0
setmarker pos .idBertha2 berthaX berthaY 0
op sub *tmp347 berthaY 1
setmarker pos .idShadow berthaX *tmp347 0
op sub *tmp348 berthaX 3
setmarker pos .idLeg1 *tmp348 berthaY 0
op sub *tmp350 berthaY 0.5
setmarker pos .idLeg2 *tmp348 *tmp350 0
op add *tmp351 berthaX 3
setmarker pos .idLeg3 *tmp351 berthaY 0
setmarker pos .idLeg4 *tmp351 *tmp350 0
set .clientState 1
op sub *tmp354 berthaY 6
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp151 berthaX 1
op add *tmp154 berthaX 1
op sub *tmp158 berthaY 7
op sub *tmp162 berthaY 5
jump 631 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp152 :mapButton:cursorX *tmp151
op lessThanEq *tmp155 :mapButton:cursorX *tmp154
op land *tmp156 *tmp152 *tmp155
op greaterThanEq *tmp159 :mapButton:cursorY *tmp158
op land *tmp160 *tmp156 *tmp159
op lessThanEq *tmp163 :mapButton:cursorY *tmp162
op land :mapButton:isHovering *tmp160 *tmp163
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp166 :mapButton:isHovering :mapButton:isClicking
jump 626 equal *tmp166 false
set :mapButton*retval 2
jump 632 always 0 0
jump 629 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 632 always 0 0
op add :mapButton:i :mapButton:i 1
jump 611 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 635 equal :mapButton*retval 0
print "[blue]"
jump 636 always 0 0
print "[white]"
print "[  ]"
makemarker text .idPanelButton 0 0 false
setmarker fontSize .idPanelButton 1.5 0 0
setmarker flushText .idPanelButton 0 0 0
setmarker pos .idPanelButton berthaX *tmp354 0
jump 789 equal .panelOpened false
print "[orange] Big Bertha \n\nTarget:\n\n"
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp151 berthaX 3.7
op sub *tmp154 berthaX 0.7000000000000002
op sub *tmp158 berthaY 12.1
op sub *tmp162 berthaY 11.1
jump 670 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp152 :mapButton:cursorX *tmp151
op lessThanEq *tmp155 :mapButton:cursorX *tmp154
op land *tmp156 *tmp152 *tmp155
op greaterThanEq *tmp159 :mapButton:cursorY *tmp158
op land *tmp160 *tmp156 *tmp159
op lessThanEq *tmp163 :mapButton:cursorY *tmp162
op land :mapButton:isHovering *tmp160 *tmp163
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp166 :mapButton:isHovering :mapButton:isClicking
jump 665 equal *tmp166 false
set :client:targetButton 2
jump 671 always 0 0
jump 668 equal :mapButton:isHovering false
set :client:targetButton 1
jump 671 always 0 0
op add :mapButton:i :mapButton:i 1
jump 650 lessThanEq :mapButton:i :mapButton:playerCount
set :client:targetButton 0
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op add *tmp151 berthaX 0.6499999999999999
op add *tmp154 berthaX 3.65
op sub *tmp158 berthaY 12.1
op sub *tmp162 berthaY 11.1
jump 698 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp152 :mapButton:cursorX *tmp151
op lessThanEq *tmp155 :mapButton:cursorX *tmp154
op land *tmp156 *tmp152 *tmp155
op greaterThanEq *tmp159 :mapButton:cursorY *tmp158
op land *tmp160 *tmp156 *tmp159
op lessThanEq *tmp163 :mapButton:cursorY *tmp162
op land :mapButton:isHovering *tmp160 *tmp163
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp166 :mapButton:isHovering :mapButton:isClicking
jump 693 equal *tmp166 false
set :mapButton*retval 2
jump 699 always 0 0
jump 696 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 699 always 0 0
op add :mapButton:i :mapButton:i 1
jump 678 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 702 equal :client:targetButton 0
print "[blue]"
jump 703 always 0 0
print "[gold]"
print "[ Set ][gold] / "
jump 707 equal :mapButton*retval 0
print "[blue]"
jump 708 always 0 0
print "[gold]"
print "[ Auto ]\n\n"
op equal *tmp370 .aimingPlayer null
op equal *tmp371 .targetX null
op land *tmp372 *tmp370 *tmp371
jump 714 equal *tmp372 false
print "[white]Target not set."
jump 720 equal .targetX null
op ceil *tmp376 .targetX 0
op ceil *tmp377 .targetY 0
print "[white]Target:[red] {0}, {0}\n"
format *tmp376
format *tmp377
jump 726 equal .aimingPlayer null
sensor *tmp380 .aimingPlayer @name
print "[white]{0} is aiming."
format *tmp380
op add .aimTimeout @tick 60
jump 728 always 0 0
jump 728 equal .autoMode false
print "[white]Auto aiming."
print "\n\n"
getblock building .vault berthaX berthaY
sensor *tmp384 .vault @type
jump 740 equal *tmp384 @vault
print "[red] No vault detected!"
makemarker shape .idVault 0 0 false
setmarker shape .idVault 4 0 0
setmarker pos .idVault berthaX berthaY 0
setmarker radius .idVault 16 0 0
setmarker rotation .idVault 45 0 0
setmarker color .idVault %ff636378 0 0
jump 749 always 0 0
sensor :resourceTooltip:ownedResources .vault @blast-compound
set *tmp390 "[green]"
jump 744 lessThanEq 30 :resourceTooltip:ownedResources
set *tmp390 "[red]"
op min *tmp391 :resourceTooltip:ownedResources 30
print *tmp390
print *tmp391
print " / 30 [white]\n"
setmarker remove .idVault 0 0 0
makemarker text .idPanel 0 0 false
setmarker fontSize .idPanel 1.5 0 0
setmarker flushText .idPanel 0 0 0
op sub *tmp392 berthaY 8
setmarker pos .idPanel berthaX *tmp392 0
op notEqual *tmp393 :client:targetButton 0
op notEqual *tmp394 .aimingPlayer null
op or *tmp396 *tmp393 *tmp394
op notEqual *tmp395 *tmp396 false
op lessThan *tmp397 @tick .aimTimeout
op or *tmp399 *tmp395 *tmp397
jump 785 equal *tmp399 false
jump 790 equal .targetX null
op cos *tmp403 .angleTarget 0
op mul *tmp404 *tmp403 7.5
op sub :aimMarker:offSetX berthaX *tmp404
op sin *tmp406 .angleTarget 0
op mul *tmp407 *tmp406 7.5
op sub :aimMarker:offSetY berthaY *tmp407
makemarker line .idAim1 0 0 false
setmarker pos .idAim1 :aimMarker:offSetX :aimMarker:offSetY 0
setmarker endPos .idAim1 .targetX .targetY 0
setmarker drawLayer .idAim1 100 0 0
setmarker stroke .idAim1 2 0 0
setmarker color .idAim1 %ff6363 0 0
makemarker shape .idAim2 0 0 false
setmarker pos .idAim2 :aimMarker:offSetX :aimMarker:offSetY 0
setmarker shape .idAim2 4 1 0
setmarker drawLayer .idAim2 100 0 0
setmarker color .idAim2 %ff6363 0 0
makemarker shape .idAim3 0 0 false
setmarker pos .idAim3 .targetX .targetY 0
setmarker shape .idAim3 4 1 0
setmarker drawLayer .idAim3 100 0 0
setmarker color .idAim3 %ff6363 0 0
jump 790 always 0 0
setmarker remove .idAim1 0 0 0
setmarker remove .idAim2 0 0 0
setmarker remove .idAim3 0 0 0
jump 790 always 0 0
setmarker remove .idPanel 0 0 0
set .angleTarget -90
jump 796 equal .targetX null
op sub *tmp444 berthaX .targetX
op sub *tmp445 berthaY .targetY
op angle *tmp446 *tmp444 *tmp445
op mod .angleTarget *tmp446 360
op sub *tmp448 .angleTarget .angle
op mod .angleDiff *tmp448 360
jump 800 lessThanEq .angleDiff 180
op sub .angleDiff .angleDiff 360
jump 802 greaterThanEq .angleDiff -180
op add .angleDiff .angleDiff 360
jump 806 lessThanEq .angleDiff 1
op sub *tmp456 @second .angleTime
op mul *tmp457 45 *tmp456
op add .angle .angle *tmp457
jump 810 greaterThanEq .angleDiff -1
op sub *tmp460 @second .angleTime
op mul *tmp461 45 *tmp460
op sub .angle .angle *tmp461
set .angleTime @second
op sub :updatePosition:dt @second .displayTime
set .displayTime @second
op sub :updatePosition:dx berthaX .berthaDisplayX
op sub :updatePosition:dy berthaY .berthaDisplayY
op len :updatePosition:dist :updatePosition:dx :updatePosition:dy
jump 828 lessThanEq :updatePosition:dist 0.01
op mul :updatePosition:step 0.75 :updatePosition:dt
jump 822 lessThanEq :updatePosition:step :updatePosition:dist
set .berthaDisplayX berthaX
set .berthaDisplayY berthaY
jump 828 always 0 0
op div :updatePosition:dirX :updatePosition:dx :updatePosition:dist
op div :updatePosition:dirY :updatePosition:dy :updatePosition:dist
op mul *tmp421 :updatePosition:dirX :updatePosition:step
op add .berthaDisplayX .berthaDisplayX *tmp421
op mul *tmp422 :updatePosition:dirY :updatePosition:step
op add .berthaDisplayY .berthaDisplayY *tmp422
op add *tmp423 .angle 90
setmarker rotation *tmp0 *tmp423 0 0
setmarker rotation .idBertha2 *tmp423 0 0
setmarker pos *tmp0 .berthaDisplayX .berthaDisplayY 0
setprop @blast-compound .vault .syncedBlast
jump 555 equal .shotTrigger false
set .shotTrigger 0
op add .berthaCooldown @second 4
op cos *tmp427 .angleTarget 0
op mul *tmp428 *tmp427 1.5
op add .berthaDisplayX berthaX *tmp428
op sin *tmp430 .angleTarget 0
op mul *tmp431 *tmp430 1.5
op add .berthaDisplayY berthaY *tmp431
op mul *tmp434 *tmp427 -4
op add :client:bulletX .berthaDisplayX *tmp434
op mul *tmp437 *tmp430 -4
op add :client:bulletY .berthaDisplayY *tmp437
playsound true @sfx-bang 1 0.5 0 :client:bulletX :client:bulletY 1
op add *tmp439 .angle 180
effect smokeColor :client:bulletX :client:bulletY *tmp439 %ff6363 0
op add *tmp440 .angle 195
effect smokeColor :client:bulletX :client:bulletY *tmp440 %ff6363 0
op add *tmp441 .angle 165
effect smokeColor :client:bulletX :client:bulletY *tmp441 %ff6363 0
write :client:bulletX processor1 ".bulletX"
write :client:bulletY processor1 ".bulletY"
write .targetX processor1 ".targetX"
write .targetY processor1 ".targetY"
write 120 processor1 ".shotSpeed"
write .angleTarget processor1 ".angleTarget"
jump 555 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

