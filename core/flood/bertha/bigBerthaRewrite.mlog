set berthaX 325
set berthaY 353
op add *tmp1 @thisx @thisy
op add *tmp3 *tmp1 1
op mul *tmp4 *tmp1 *tmp3
op div *tmp5 *tmp4 2
op add *tmp6 *tmp5 @thisy
op mul *tmp0 *tmp6 1000
op add .idBertha2 *tmp0 1
op add .idShadow *tmp0 2
op add .idLeg1 *tmp0 3
op add .idLeg2 *tmp0 4
op add .idLeg3 *tmp0 5
op add .idLeg4 *tmp0 6
op add .idAim1 *tmp0 7
op add .idAim2 *tmp0 8
op add .idAim3 *tmp0 9
op add .idPanelButton *tmp0 10
op add .idPanel *tmp0 11
op add .idVault *tmp0 12
set .clientState 0
setrate 1000
setmarker remove *tmp0 0 0 0
setmarker remove .idBertha2 0 0 0
setmarker remove .idShadow 0 0 0
setmarker remove .idLeg1 0 0 0
setmarker remove .idLeg2 0 0 0
setmarker remove .idLeg3 0 0 0
setmarker remove .idLeg4 0 0 0
jump 548 equal @server false
jump 32 equal @client false
end
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp147 berthaX 1
op add *tmp150 berthaX 1
op sub *tmp154 berthaY 7
op sub *tmp158 berthaY 5
jump 59 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp148 :mapButton:cursorX *tmp147
op lessThanEq *tmp151 :mapButton:cursorX *tmp150
op land *tmp152 *tmp148 *tmp151
op greaterThanEq *tmp155 :mapButton:cursorY *tmp154
op land *tmp156 *tmp152 *tmp155
op lessThanEq *tmp159 :mapButton:cursorY *tmp158
op land :mapButton:isHovering *tmp156 *tmp159
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp162 :mapButton:isHovering :mapButton:isClicking
jump 54 equal *tmp162 false
set :mapButton*retval 2
jump 60 always 0 0
jump 57 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 60 always 0 0
op add :mapButton:i :mapButton:i 1
jump 39 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
op equal *tmp24 :mapButton*retval 2
op greaterThan *tmp25 @tick .buttonCooldown
op land *tmp26 *tmp24 *tmp25
jump 69 equal *tmp26 false
op add .buttonCooldown @tick 60
jump 68 notEqual .panelOpened 0
set .panelOpened 1
jump 69 always 0 0
set .panelOpened 0
jump 155 equal .panelOpened false
jump 137 notEqual .aimingPlayer null
set :mapButton.1:playerOut .aimingPlayer
fetch playerCount :mapButton.1:playerCount @sharded 0 0
set :mapButton.1:i 0
op sub *tmp43 berthaX 3.7
op sub *tmp46 berthaX 0.7000000000000002
op sub *tmp50 berthaY 12.1
op sub *tmp54 berthaY 11.1
jump 100 greaterThan 0 :mapButton.1:playerCount
fetch player :mapButton.1:player @sharded :mapButton.1:i 0
sensor :mapButton.1:cursorX :mapButton.1:player @shootX
sensor :mapButton.1:cursorY :mapButton.1:player @shootY
op greaterThanEq *tmp44 :mapButton.1:cursorX *tmp43
op lessThanEq *tmp47 :mapButton.1:cursorX *tmp46
op land *tmp48 *tmp44 *tmp47
op greaterThanEq *tmp51 :mapButton.1:cursorY *tmp50
op land *tmp52 *tmp48 *tmp51
op lessThanEq *tmp55 :mapButton.1:cursorY *tmp54
op land :mapButton.1:isHovering *tmp52 *tmp55
sensor :mapButton.1:isClicking :mapButton.1:player @shooting
op land *tmp58 :mapButton.1:isHovering :mapButton.1:isClicking
jump 95 equal *tmp58 false
set :mapButton.1:playerOut :mapButton.1:player
set *tmp36 2
jump 102 always 0 0
jump 98 equal :mapButton.1:isHovering false
set *tmp36 1
jump 102 always 0 0
op add :mapButton.1:i :mapButton.1:i 1
jump 79 lessThanEq :mapButton.1:i :mapButton.1:playerCount
set :mapButton.1:playerOut null
set *tmp36 0
set .aimingPlayer :mapButton.1:playerOut
jump 107 notEqual *tmp36 2
op add .buttonCooldown @tick 60
op add .targetTimeout @tick 600
set .autoMode 0
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op add *tmp147 berthaX 0.6499999999999999
op add *tmp150 berthaX 3.65
jump 132 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp148 :mapButton:cursorX *tmp147
op lessThanEq *tmp151 :mapButton:cursorX *tmp150
op land *tmp152 *tmp148 *tmp151
op greaterThanEq *tmp155 :mapButton:cursorY *tmp50
op land *tmp156 *tmp152 *tmp155
op lessThanEq *tmp159 :mapButton:cursorY *tmp54
op land :mapButton:isHovering *tmp156 *tmp159
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp162 :mapButton:isHovering :mapButton:isClicking
jump 127 equal *tmp162 false
set :mapButton*retval 2
jump 133 always 0 0
jump 130 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 133 always 0 0
op add :mapButton:i :mapButton:i 1
jump 112 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 155 notEqual :mapButton*retval 2
op add .buttonCooldown @tick 60
set .autoMode 1
jump 155 always 0 0
sensor .targetX .aimingPlayer @shootX
sensor .targetY .aimingPlayer @shootY
op notEqual *tmp73 .lastTargetX .targetX
op notEqual *tmp74 .lastTargetY .targetY
op land *tmp75 *tmp73 *tmp74
jump 144 equal *tmp75 false
op add .targetTimeout @tick 600
set .lastTargetX .targetX
set .lastTargetY .targetY
jump 150 lessThanEq @tick .targetTimeout
set .aimingPlayer null
set .targetX null
set .targetY null
sensor *tmp82 .aimingPlayer @shooting
op greaterThan *tmp83 @tick .buttonCooldown
op land *tmp84 *tmp82 *tmp83
jump 155 equal *tmp84 false
set .aimingPlayer null
op equal *tmp86 .autoReady false
op land *tmp87 .autoMode *tmp86
jump 165 equal *tmp87 false
fetch coreCount :server:coreCount @blue 0 0
op rand *tmp90 :server:coreCount 0
op floor :server:randCore *tmp90 0
fetch core :server:coreTarget @blue :server:randCore 0
sensor .targetX :server:coreTarget @x
sensor .targetY :server:coreTarget @y
set .autoReady 1
set .angleTarget -90
jump 171 equal .targetX null
op sub *tmp391 berthaX .targetX
op sub *tmp392 berthaY .targetY
op angle *tmp393 *tmp391 *tmp392
op mod .angleTarget *tmp393 360
op sub *tmp395 .angleTarget .angle
op mod .angleDiff *tmp395 360
jump 175 lessThanEq .angleDiff 180
op sub .angleDiff .angleDiff 360
jump 177 greaterThanEq .angleDiff -180
op add .angleDiff .angleDiff 360
jump 181 lessThanEq .angleDiff 1
op sub *tmp403 @second .angleTime
op mul *tmp404 45 *tmp403
op add .angle .angle *tmp404
jump 185 greaterThanEq .angleDiff -1
op sub *tmp407 @second .angleTime
op mul *tmp408 45 *tmp407
op sub .angle .angle *tmp408
set .angleTime @second
getblock building .vault berthaX berthaY
op abs *tmp99 .angleDiff 0
op lessThan *tmp100 *tmp99 1
op notEqual *tmp101 .targetX null
op land *tmp102 *tmp100 *tmp101
sensor *tmp103 .vault @blast-compound
op greaterThan *tmp104 *tmp103 50
op land *tmp105 *tmp102 *tmp104
op greaterThan *tmp106 @second .berthaCooldown
op land :server:readyToShoot *tmp105 *tmp106
jump 210 equal :server:readyToShoot false
set .shotTrigger 1
sync .shotTrigger
sensor *tmp109 .vault @blast-compound
op sub *tmp110 *tmp109 50
setprop @blast-compound .vault *tmp110
set .lockedTargetX .targetX
set .lockedTargetY .targetY
op sub *tmp113 berthaX .targetX
op sub *tmp114 berthaY .targetY
op len *tmp115 *tmp113 *tmp114
op div *tmp116 *tmp115 120
op add .shotEta @second *tmp116
op add .berthaCooldown @second 5
op greaterThan *tmp119 @second .shotEta
op notEqual *tmp120 .shotEta null
op land *tmp121 *tmp119 *tmp120
jump 236 equal *tmp121 false
set :server:blocked 0
fetch buildCount *tmp124 @sharded 0 @world-processor
set :server:i 0
jump 232 greaterThan 0 *tmp124
fetch build :server:processor @sharded :server:i @world-processor
read *tmp126 :server:processor "structureId"
jump 230 notEqual *tmp126 "floodBarrier"
read :server:barrierX :server:processor "blockX"
read :server:barrierY :server:processor "blockY"
read :server:barrierRadius :server:processor "radius"
op sub *tmp132 .lockedTargetX :server:barrierX
op sub *tmp133 .lockedTargetY :server:barrierY
op len *tmp134 *tmp132 *tmp133
jump 230 greaterThanEq *tmp134 :server:barrierRadius
set :server:blocked 1
jump 232 always 0 0
op add :server:i :server:i 1
jump 218 lessThanEq :server:i *tmp124
jump 236 notEqual :server:blocked false
explosion @sharded .lockedTargetX .lockedTargetY 12 500 1 1 1 true
set .shotEta null
set .autoReady 0
sensor .syncedBlast .vault @blast-compound
sync .syncedBlast
sync .panelOpened
sync .aimingPlayer
sync .targetX
sync .targetY
sync .autoMode
jump 291 notEqual .clientState false
set .berthaDisplayX berthaX
set .berthaDisplayY berthaY
makemarker texture *tmp0 0 0 0
makemarker texture .idBertha2 0 0 0
makemarker texture .idShadow 0 0 0
makemarker texture .idLeg1 0 0 0
makemarker texture .idLeg2 0 0 0
makemarker texture .idLeg3 0 0 0
makemarker texture .idLeg4 0 0 0
setmarker texture *tmp0 0 "titan-barrel-outline" 0
setmarker texture .idBertha2 0 "titan-outline" 0
setmarker texture .idShadow 0 "circle-shadow" 0
setmarker texture .idLeg1 0 "titan-side-l-outline" 0
setmarker texture .idLeg2 0 "titan-side-l-outline" 0
setmarker texture .idLeg3 0 "titan-side-r-outline" 0
setmarker texture .idLeg4 0 "titan-side-r-outline" 0
setmarker textureSize *tmp0 3 7 0
setmarker textureSize .idBertha2 4 8 0
setmarker textureSize .idShadow 8 8 0
setmarker textureSize .idLeg1 6 6 0
setmarker textureSize .idLeg2 6 -6 0
setmarker textureSize .idLeg3 -6 6 0
setmarker textureSize .idLeg4 -6 -6 0
setmarker rotation .idLeg1 45 0 0
setmarker rotation .idLeg2 -45 0 0
setmarker rotation .idLeg3 -45 0 0
setmarker rotation .idLeg4 45 0 0
setmarker color .idShadow %000000a7 0 0
setmarker drawLayer *tmp0 55 0 0
setmarker drawLayer .idBertha2 54.9 0 0
setmarker drawLayer .idShadow 54 0 0
setmarker drawLayer .idLeg1 54.1 0 0
setmarker drawLayer .idLeg2 54.1 0 0
setmarker drawLayer .idLeg3 54.1 0 0
setmarker drawLayer .idLeg4 54.1 0 0
setmarker pos *tmp0 berthaX berthaY 0
setmarker pos .idBertha2 berthaX berthaY 0
op sub *tmp294 berthaY 1
setmarker pos .idShadow berthaX *tmp294 0
op sub *tmp295 berthaX 3
setmarker pos .idLeg1 *tmp295 berthaY 0
op sub *tmp297 berthaY 0.5
setmarker pos .idLeg2 *tmp295 *tmp297 0
op add *tmp298 berthaX 3
setmarker pos .idLeg3 *tmp298 berthaY 0
setmarker pos .idLeg4 *tmp298 *tmp297 0
set .clientState 1
op sub *tmp301 berthaY 6
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp147 berthaX 1
op add *tmp150 berthaX 1
op sub *tmp154 berthaY 7
op sub *tmp158 berthaY 5
jump 319 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp148 :mapButton:cursorX *tmp147
op lessThanEq *tmp151 :mapButton:cursorX *tmp150
op land *tmp152 *tmp148 *tmp151
op greaterThanEq *tmp155 :mapButton:cursorY *tmp154
op land *tmp156 *tmp152 *tmp155
op lessThanEq *tmp159 :mapButton:cursorY *tmp158
op land :mapButton:isHovering *tmp156 *tmp159
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp162 :mapButton:isHovering :mapButton:isClicking
jump 314 equal *tmp162 false
set :mapButton*retval 2
jump 320 always 0 0
jump 317 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 320 always 0 0
op add :mapButton:i :mapButton:i 1
jump 299 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 323 equal :mapButton*retval 0
print "[blue]"
jump 324 always 0 0
print "[white]"
print "[  ]"
makemarker text .idPanelButton 0 0 false
setmarker fontSize .idPanelButton 1.5 0 0
setmarker flushText .idPanelButton 0 0 0
setmarker pos .idPanelButton berthaX *tmp301 0
jump 477 equal .panelOpened false
print "[orange] Big Bertha \n\nTarget:\n\n"
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp147 berthaX 3.7
op sub *tmp150 berthaX 0.7000000000000002
op sub *tmp154 berthaY 12.1
op sub *tmp158 berthaY 11.1
jump 358 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp148 :mapButton:cursorX *tmp147
op lessThanEq *tmp151 :mapButton:cursorX *tmp150
op land *tmp152 *tmp148 *tmp151
op greaterThanEq *tmp155 :mapButton:cursorY *tmp154
op land *tmp156 *tmp152 *tmp155
op lessThanEq *tmp159 :mapButton:cursorY *tmp158
op land :mapButton:isHovering *tmp156 *tmp159
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp162 :mapButton:isHovering :mapButton:isClicking
jump 353 equal *tmp162 false
set :client:targetButton 2
jump 359 always 0 0
jump 356 equal :mapButton:isHovering false
set :client:targetButton 1
jump 359 always 0 0
op add :mapButton:i :mapButton:i 1
jump 338 lessThanEq :mapButton:i :mapButton:playerCount
set :client:targetButton 0
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op add *tmp147 berthaX 0.6499999999999999
op add *tmp150 berthaX 3.65
op sub *tmp154 berthaY 12.1
op sub *tmp158 berthaY 11.1
jump 386 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp148 :mapButton:cursorX *tmp147
op lessThanEq *tmp151 :mapButton:cursorX *tmp150
op land *tmp152 *tmp148 *tmp151
op greaterThanEq *tmp155 :mapButton:cursorY *tmp154
op land *tmp156 *tmp152 *tmp155
op lessThanEq *tmp159 :mapButton:cursorY *tmp158
op land :mapButton:isHovering *tmp156 *tmp159
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp162 :mapButton:isHovering :mapButton:isClicking
jump 381 equal *tmp162 false
set :mapButton*retval 2
jump 387 always 0 0
jump 384 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 387 always 0 0
op add :mapButton:i :mapButton:i 1
jump 366 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 390 equal :client:targetButton 0
print "[blue]"
jump 391 always 0 0
print "[gold]"
print "[ Set ][gold] / "
jump 395 equal :mapButton*retval 0
print "[blue]"
jump 396 always 0 0
print "[gold]"
print "[ Auto ]\n\n"
op equal *tmp317 .aimingPlayer null
op equal *tmp318 .targetX null
op land *tmp319 *tmp317 *tmp318
jump 402 equal *tmp319 false
print "[white]Target not set."
jump 408 equal .targetX null
op ceil *tmp323 .targetX 0
op ceil *tmp324 .targetY 0
print "[white]Target:[red] {0}, {0}\n"
format *tmp323
format *tmp324
jump 414 equal .aimingPlayer null
sensor *tmp327 .aimingPlayer @name
print "[white]{0} is aiming."
format *tmp327
op add .aimTimeout @tick 60
jump 416 always 0 0
jump 416 equal .autoMode false
print "[white]Auto aiming."
print "\n\n"
getblock building .vault berthaX berthaY
sensor *tmp331 .vault @type
jump 428 equal *tmp331 @vault
print "[red] No vault detected!"
makemarker shape .idVault 0 0 false
setmarker shape .idVault 4 0 0
setmarker pos .idVault berthaX berthaY 0
setmarker radius .idVault 16 0 0
setmarker rotation .idVault 45 0 0
setmarker color .idVault %ff636378 0 0
jump 437 always 0 0
sensor :resourceTooltip:ownedResources .vault @blast-compound
set *tmp337 "[green]"
jump 432 lessThanEq 50 :resourceTooltip:ownedResources
set *tmp337 "[red]"
op min *tmp338 :resourceTooltip:ownedResources 50
print *tmp337
print *tmp338
print " / 50 [white]\n"
setmarker remove .idVault 0 0 0
makemarker text .idPanel 0 0 false
setmarker fontSize .idPanel 1.5 0 0
setmarker flushText .idPanel 0 0 0
op sub *tmp339 berthaY 8
setmarker pos .idPanel berthaX *tmp339 0
op notEqual *tmp340 :client:targetButton 0
op notEqual *tmp341 .aimingPlayer null
op or *tmp343 *tmp340 *tmp341
op notEqual *tmp342 *tmp343 false
op lessThan *tmp344 @tick .aimTimeout
op or *tmp346 *tmp342 *tmp344
jump 473 equal *tmp346 false
jump 478 equal .targetX null
op cos *tmp350 .angleTarget 0
op mul *tmp351 *tmp350 7.5
op sub :aimMarker:offSetX berthaX *tmp351
op sin *tmp353 .angleTarget 0
op mul *tmp354 *tmp353 7.5
op sub :aimMarker:offSetY berthaY *tmp354
makemarker line .idAim1 0 0 false
setmarker pos .idAim1 :aimMarker:offSetX :aimMarker:offSetY 0
setmarker endPos .idAim1 .targetX .targetY 0
setmarker drawLayer .idAim1 100 0 0
setmarker stroke .idAim1 2 0 0
setmarker color .idAim1 %ff6363 0 0
makemarker shape .idAim2 0 0 false
setmarker pos .idAim2 :aimMarker:offSetX :aimMarker:offSetY 0
setmarker shape .idAim2 4 1 0
setmarker drawLayer .idAim2 100 0 0
setmarker color .idAim2 %ff6363 0 0
makemarker shape .idAim3 0 0 false
setmarker pos .idAim3 .targetX .targetY 0
setmarker shape .idAim3 4 1 0
setmarker drawLayer .idAim3 100 0 0
setmarker color .idAim3 %ff6363 0 0
jump 478 always 0 0
setmarker remove .idAim1 0 0 0
setmarker remove .idAim2 0 0 0
setmarker remove .idAim3 0 0 0
jump 478 always 0 0
setmarker remove .idPanel 0 0 0
set .angleTarget -90
jump 484 equal .targetX null
op sub *tmp391 berthaX .targetX
op sub *tmp392 berthaY .targetY
op angle *tmp393 *tmp391 *tmp392
op mod .angleTarget *tmp393 360
op sub *tmp395 .angleTarget .angle
op mod .angleDiff *tmp395 360
jump 488 lessThanEq .angleDiff 180
op sub .angleDiff .angleDiff 360
jump 490 greaterThanEq .angleDiff -180
op add .angleDiff .angleDiff 360
jump 494 lessThanEq .angleDiff 1
op sub *tmp403 @second .angleTime
op mul *tmp404 45 *tmp403
op add .angle .angle *tmp404
jump 498 greaterThanEq .angleDiff -1
op sub *tmp407 @second .angleTime
op mul *tmp408 45 *tmp407
op sub .angle .angle *tmp408
set .angleTime @second
op sub :updatePosition:dt @second .displayTime
set .displayTime @second
op sub :updatePosition:dx berthaX .berthaDisplayX
op sub :updatePosition:dy berthaY .berthaDisplayY
op len :updatePosition:dist :updatePosition:dx :updatePosition:dy
jump 516 lessThanEq :updatePosition:dist 0.01
op mul :updatePosition:step 0.75 :updatePosition:dt
jump 510 lessThanEq :updatePosition:step :updatePosition:dist
set .berthaDisplayX berthaX
set .berthaDisplayY berthaY
jump 516 always 0 0
op div :updatePosition:dirX :updatePosition:dx :updatePosition:dist
op div :updatePosition:dirY :updatePosition:dy :updatePosition:dist
op mul *tmp368 :updatePosition:dirX :updatePosition:step
op add .berthaDisplayX .berthaDisplayX *tmp368
op mul *tmp369 :updatePosition:dirY :updatePosition:step
op add .berthaDisplayY .berthaDisplayY *tmp369
op add *tmp370 .angle 90
setmarker rotation *tmp0 *tmp370 0 0
setmarker rotation .idBertha2 *tmp370 0 0
setmarker pos *tmp0 .berthaDisplayX .berthaDisplayY 0
setprop @blast-compound .vault .syncedBlast
jump 30 equal .shotTrigger false
set .shotTrigger 0
op add .berthaCooldown @second 5
op cos *tmp374 .angleTarget 0
op mul *tmp375 *tmp374 1.5
op add .berthaDisplayX berthaX *tmp375
op sin *tmp377 .angleTarget 0
op mul *tmp378 *tmp377 1.5
op add .berthaDisplayY berthaY *tmp378
op mul *tmp381 *tmp374 -4
op add :client:bulletX .berthaDisplayX *tmp381
op mul *tmp384 *tmp377 -4
op add :client:bulletY .berthaDisplayY *tmp384
playsound true @sfx-bang 1 0.5 0 :client:bulletX :client:bulletY 1
op add *tmp386 .angle 180
effect smokeColor :client:bulletX :client:bulletY *tmp386 %ff6363 0
op add *tmp387 .angle 195
effect smokeColor :client:bulletX :client:bulletY *tmp387 %ff6363 0
op add *tmp388 .angle 165
effect smokeColor :client:bulletX :client:bulletY *tmp388 %ff6363 0
write :client:bulletX processor1 ".bulletX"
write :client:bulletY processor1 ".bulletY"
write .targetX processor1 ".targetX"
write .targetY processor1 ".targetY"
write 120 processor1 ".shotSpeed"
write .angleTarget processor1 ".angleTarget"
jump 30 always 0 0
jump 0 equal @client false
jump 597 notEqual .clientState false
set .berthaDisplayX berthaX
set .berthaDisplayY berthaY
makemarker texture *tmp0 0 0 0
makemarker texture .idBertha2 0 0 0
makemarker texture .idShadow 0 0 0
makemarker texture .idLeg1 0 0 0
makemarker texture .idLeg2 0 0 0
makemarker texture .idLeg3 0 0 0
makemarker texture .idLeg4 0 0 0
setmarker texture *tmp0 0 "titan-barrel-outline" 0
setmarker texture .idBertha2 0 "titan-outline" 0
setmarker texture .idShadow 0 "circle-shadow" 0
setmarker texture .idLeg1 0 "titan-side-l-outline" 0
setmarker texture .idLeg2 0 "titan-side-l-outline" 0
setmarker texture .idLeg3 0 "titan-side-r-outline" 0
setmarker texture .idLeg4 0 "titan-side-r-outline" 0
setmarker textureSize *tmp0 3 7 0
setmarker textureSize .idBertha2 4 8 0
setmarker textureSize .idShadow 8 8 0
setmarker textureSize .idLeg1 6 6 0
setmarker textureSize .idLeg2 6 -6 0
setmarker textureSize .idLeg3 -6 6 0
setmarker textureSize .idLeg4 -6 -6 0
setmarker rotation .idLeg1 45 0 0
setmarker rotation .idLeg2 -45 0 0
setmarker rotation .idLeg3 -45 0 0
setmarker rotation .idLeg4 45 0 0
setmarker color .idShadow %000000a7 0 0
setmarker drawLayer *tmp0 55 0 0
setmarker drawLayer .idBertha2 54.9 0 0
setmarker drawLayer .idShadow 54 0 0
setmarker drawLayer .idLeg1 54.1 0 0
setmarker drawLayer .idLeg2 54.1 0 0
setmarker drawLayer .idLeg3 54.1 0 0
setmarker drawLayer .idLeg4 54.1 0 0
setmarker pos *tmp0 berthaX berthaY 0
setmarker pos .idBertha2 berthaX berthaY 0
op sub *tmp294 berthaY 1
setmarker pos .idShadow berthaX *tmp294 0
op sub *tmp295 berthaX 3
setmarker pos .idLeg1 *tmp295 berthaY 0
op sub *tmp297 berthaY 0.5
setmarker pos .idLeg2 *tmp295 *tmp297 0
op add *tmp298 berthaX 3
setmarker pos .idLeg3 *tmp298 berthaY 0
setmarker pos .idLeg4 *tmp298 *tmp297 0
set .clientState 1
op sub *tmp301 berthaY 6
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp147 berthaX 1
op add *tmp150 berthaX 1
op sub *tmp154 berthaY 7
op sub *tmp158 berthaY 5
jump 625 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp148 :mapButton:cursorX *tmp147
op lessThanEq *tmp151 :mapButton:cursorX *tmp150
op land *tmp152 *tmp148 *tmp151
op greaterThanEq *tmp155 :mapButton:cursorY *tmp154
op land *tmp156 *tmp152 *tmp155
op lessThanEq *tmp159 :mapButton:cursorY *tmp158
op land :mapButton:isHovering *tmp156 *tmp159
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp162 :mapButton:isHovering :mapButton:isClicking
jump 620 equal *tmp162 false
set :mapButton*retval 2
jump 626 always 0 0
jump 623 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 626 always 0 0
op add :mapButton:i :mapButton:i 1
jump 605 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 629 equal :mapButton*retval 0
print "[blue]"
jump 630 always 0 0
print "[white]"
print "[  ]"
makemarker text .idPanelButton 0 0 false
setmarker fontSize .idPanelButton 1.5 0 0
setmarker flushText .idPanelButton 0 0 0
setmarker pos .idPanelButton berthaX *tmp301 0
jump 783 equal .panelOpened false
print "[orange] Big Bertha \n\nTarget:\n\n"
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp147 berthaX 3.7
op sub *tmp150 berthaX 0.7000000000000002
op sub *tmp154 berthaY 12.1
op sub *tmp158 berthaY 11.1
jump 664 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp148 :mapButton:cursorX *tmp147
op lessThanEq *tmp151 :mapButton:cursorX *tmp150
op land *tmp152 *tmp148 *tmp151
op greaterThanEq *tmp155 :mapButton:cursorY *tmp154
op land *tmp156 *tmp152 *tmp155
op lessThanEq *tmp159 :mapButton:cursorY *tmp158
op land :mapButton:isHovering *tmp156 *tmp159
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp162 :mapButton:isHovering :mapButton:isClicking
jump 659 equal *tmp162 false
set :client:targetButton 2
jump 665 always 0 0
jump 662 equal :mapButton:isHovering false
set :client:targetButton 1
jump 665 always 0 0
op add :mapButton:i :mapButton:i 1
jump 644 lessThanEq :mapButton:i :mapButton:playerCount
set :client:targetButton 0
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op add *tmp147 berthaX 0.6499999999999999
op add *tmp150 berthaX 3.65
op sub *tmp154 berthaY 12.1
op sub *tmp158 berthaY 11.1
jump 692 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp148 :mapButton:cursorX *tmp147
op lessThanEq *tmp151 :mapButton:cursorX *tmp150
op land *tmp152 *tmp148 *tmp151
op greaterThanEq *tmp155 :mapButton:cursorY *tmp154
op land *tmp156 *tmp152 *tmp155
op lessThanEq *tmp159 :mapButton:cursorY *tmp158
op land :mapButton:isHovering *tmp156 *tmp159
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp162 :mapButton:isHovering :mapButton:isClicking
jump 687 equal *tmp162 false
set :mapButton*retval 2
jump 693 always 0 0
jump 690 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 693 always 0 0
op add :mapButton:i :mapButton:i 1
jump 672 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 696 equal :client:targetButton 0
print "[blue]"
jump 697 always 0 0
print "[gold]"
print "[ Set ][gold] / "
jump 701 equal :mapButton*retval 0
print "[blue]"
jump 702 always 0 0
print "[gold]"
print "[ Auto ]\n\n"
op equal *tmp317 .aimingPlayer null
op equal *tmp318 .targetX null
op land *tmp319 *tmp317 *tmp318
jump 708 equal *tmp319 false
print "[white]Target not set."
jump 714 equal .targetX null
op ceil *tmp323 .targetX 0
op ceil *tmp324 .targetY 0
print "[white]Target:[red] {0}, {0}\n"
format *tmp323
format *tmp324
jump 720 equal .aimingPlayer null
sensor *tmp327 .aimingPlayer @name
print "[white]{0} is aiming."
format *tmp327
op add .aimTimeout @tick 60
jump 722 always 0 0
jump 722 equal .autoMode false
print "[white]Auto aiming."
print "\n\n"
getblock building .vault berthaX berthaY
sensor *tmp331 .vault @type
jump 734 equal *tmp331 @vault
print "[red] No vault detected!"
makemarker shape .idVault 0 0 false
setmarker shape .idVault 4 0 0
setmarker pos .idVault berthaX berthaY 0
setmarker radius .idVault 16 0 0
setmarker rotation .idVault 45 0 0
setmarker color .idVault %ff636378 0 0
jump 743 always 0 0
sensor :resourceTooltip:ownedResources .vault @blast-compound
set *tmp337 "[green]"
jump 738 lessThanEq 50 :resourceTooltip:ownedResources
set *tmp337 "[red]"
op min *tmp338 :resourceTooltip:ownedResources 50
print *tmp337
print *tmp338
print " / 50 [white]\n"
setmarker remove .idVault 0 0 0
makemarker text .idPanel 0 0 false
setmarker fontSize .idPanel 1.5 0 0
setmarker flushText .idPanel 0 0 0
op sub *tmp339 berthaY 8
setmarker pos .idPanel berthaX *tmp339 0
op notEqual *tmp340 :client:targetButton 0
op notEqual *tmp341 .aimingPlayer null
op or *tmp343 *tmp340 *tmp341
op notEqual *tmp342 *tmp343 false
op lessThan *tmp344 @tick .aimTimeout
op or *tmp346 *tmp342 *tmp344
jump 779 equal *tmp346 false
jump 784 equal .targetX null
op cos *tmp350 .angleTarget 0
op mul *tmp351 *tmp350 7.5
op sub :aimMarker:offSetX berthaX *tmp351
op sin *tmp353 .angleTarget 0
op mul *tmp354 *tmp353 7.5
op sub :aimMarker:offSetY berthaY *tmp354
makemarker line .idAim1 0 0 false
setmarker pos .idAim1 :aimMarker:offSetX :aimMarker:offSetY 0
setmarker endPos .idAim1 .targetX .targetY 0
setmarker drawLayer .idAim1 100 0 0
setmarker stroke .idAim1 2 0 0
setmarker color .idAim1 %ff6363 0 0
makemarker shape .idAim2 0 0 false
setmarker pos .idAim2 :aimMarker:offSetX :aimMarker:offSetY 0
setmarker shape .idAim2 4 1 0
setmarker drawLayer .idAim2 100 0 0
setmarker color .idAim2 %ff6363 0 0
makemarker shape .idAim3 0 0 false
setmarker pos .idAim3 .targetX .targetY 0
setmarker shape .idAim3 4 1 0
setmarker drawLayer .idAim3 100 0 0
setmarker color .idAim3 %ff6363 0 0
jump 784 always 0 0
setmarker remove .idAim1 0 0 0
setmarker remove .idAim2 0 0 0
setmarker remove .idAim3 0 0 0
jump 784 always 0 0
setmarker remove .idPanel 0 0 0
set .angleTarget -90
jump 790 equal .targetX null
op sub *tmp391 berthaX .targetX
op sub *tmp392 berthaY .targetY
op angle *tmp393 *tmp391 *tmp392
op mod .angleTarget *tmp393 360
op sub *tmp395 .angleTarget .angle
op mod .angleDiff *tmp395 360
jump 794 lessThanEq .angleDiff 180
op sub .angleDiff .angleDiff 360
jump 796 greaterThanEq .angleDiff -180
op add .angleDiff .angleDiff 360
jump 800 lessThanEq .angleDiff 1
op sub *tmp403 @second .angleTime
op mul *tmp404 45 *tmp403
op add .angle .angle *tmp404
jump 804 greaterThanEq .angleDiff -1
op sub *tmp407 @second .angleTime
op mul *tmp408 45 *tmp407
op sub .angle .angle *tmp408
set .angleTime @second
op sub :updatePosition:dt @second .displayTime
set .displayTime @second
op sub :updatePosition:dx berthaX .berthaDisplayX
op sub :updatePosition:dy berthaY .berthaDisplayY
op len :updatePosition:dist :updatePosition:dx :updatePosition:dy
jump 822 lessThanEq :updatePosition:dist 0.01
op mul :updatePosition:step 0.75 :updatePosition:dt
jump 816 lessThanEq :updatePosition:step :updatePosition:dist
set .berthaDisplayX berthaX
set .berthaDisplayY berthaY
jump 822 always 0 0
op div :updatePosition:dirX :updatePosition:dx :updatePosition:dist
op div :updatePosition:dirY :updatePosition:dy :updatePosition:dist
op mul *tmp368 :updatePosition:dirX :updatePosition:step
op add .berthaDisplayX .berthaDisplayX *tmp368
op mul *tmp369 :updatePosition:dirY :updatePosition:step
op add .berthaDisplayY .berthaDisplayY *tmp369
op add *tmp370 .angle 90
setmarker rotation *tmp0 *tmp370 0 0
setmarker rotation .idBertha2 *tmp370 0 0
setmarker pos *tmp0 .berthaDisplayX .berthaDisplayY 0
setprop @blast-compound .vault .syncedBlast
jump 549 equal .shotTrigger false
set .shotTrigger 0
op add .berthaCooldown @second 5
op cos *tmp374 .angleTarget 0
op mul *tmp375 *tmp374 1.5
op add .berthaDisplayX berthaX *tmp375
op sin *tmp377 .angleTarget 0
op mul *tmp378 *tmp377 1.5
op add .berthaDisplayY berthaY *tmp378
op mul *tmp381 *tmp374 -4
op add :client:bulletX .berthaDisplayX *tmp381
op mul *tmp384 *tmp377 -4
op add :client:bulletY .berthaDisplayY *tmp384
playsound true @sfx-bang 1 0.5 0 :client:bulletX :client:bulletY 1
op add *tmp386 .angle 180
effect smokeColor :client:bulletX :client:bulletY *tmp386 %ff6363 0
op add *tmp387 .angle 195
effect smokeColor :client:bulletX :client:bulletY *tmp387 %ff6363 0
op add *tmp388 .angle 165
effect smokeColor :client:bulletX :client:bulletY *tmp388 %ff6363 0
write :client:bulletX processor1 ".bulletX"
write :client:bulletY processor1 ".bulletY"
write .targetX processor1 ".targetX"
write .targetY processor1 ".targetY"
write 120 processor1 ".shotSpeed"
write .angleTarget processor1 ".angleTarget"
jump 549 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

