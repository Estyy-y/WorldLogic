set starterCoreX null
set starterCoreY null
set unlocked false
set coreNumber 2
set resource1 @copper
set resourceQuantity1 1000
set resource2 @lead
set resourceQuantity2 750
set resource3 @graphite
set resourceQuantity3 250
op add *tmp1 @thisx @thisy
op add *tmp3 *tmp1 1
op mul *tmp4 *tmp1 *tmp3
op div *tmp5 *tmp4 2
op add *tmp6 *tmp5 @thisy
op mul *tmp0 *tmp6 1000
op add .idCoreDisplay *tmp0 1
op add .idCorePlace *tmp0 2
jump 18 equal processor1 null
setrate 1000
setmarker remove *tmp0 0 0 0
setmarker remove .idCoreDisplay 0 0 0
setmarker remove .idCorePlace 0 0 0
op sub *tmp10 coreNumber 1
op mul *tmp11 17 *tmp10
op add .UIX 17 *tmp11
jump 29 notEqual coreNumber 1
set .coreNumberText "I"
jump 46 always 0 0
jump 32 notEqual coreNumber 2
set .coreNumberText "II"
jump 46 always 0 0
jump 35 notEqual coreNumber 3
set .coreNumberText "III"
jump 46 always 0 0
jump 38 notEqual coreNumber 4
set .coreNumberText "IV"
jump 46 always 0 0
jump 41 notEqual coreNumber 5
set .coreNumberText "V"
jump 46 always 0 0
jump 44 notEqual coreNumber 6
set .coreNumberText "VI"
jump 46 always 0 0
jump 46 notEqual coreNumber 7
set .coreNumberText "VII"
jump 48 equal unlocked false
set .coreType @core-shard
jump 53 equal starterCoreX null
set .coreX starterCoreX
set .coreY starterCoreY
getblock building .core starterCoreX starterCoreY
sensor .coreType .core @type
jump 494 equal @server false
jump 56 equal @client false
end
jump 106 notEqual null .coreType
fetch core :unlockCoreServer:rCore @sharded 0 0
sensor *tmp23 :unlockCoreServer:rCore resource1
op greaterThanEq *tmp24 *tmp23 resourceQuantity1
sensor *tmp25 :unlockCoreServer:rCore resource2
op greaterThanEq *tmp26 *tmp25 resourceQuantity2
op land *tmp27 *tmp24 *tmp26
sensor *tmp28 :unlockCoreServer:rCore resource3
op greaterThanEq *tmp29 *tmp28 resourceQuantity3
op land *tmp30 *tmp27 *tmp29
jump 254 equal *tmp30 false
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp132 .UIX 4.5
op add *tmp135 .UIX 4.5
jump 92 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp133 :mapButton:cursorX *tmp132
op lessThanEq *tmp136 :mapButton:cursorX *tmp135
op land *tmp137 *tmp133 *tmp136
op greaterThanEq *tmp140 :mapButton:cursorY -10.5
op land *tmp141 *tmp137 *tmp140
op lessThanEq *tmp144 :mapButton:cursorY -7.5
op land :mapButton:isHovering *tmp141 *tmp144
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp147 :mapButton:isHovering :mapButton:isClicking
jump 87 equal *tmp147 false
set :mapButton*retval 2
jump 93 always 0 0
jump 90 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 93 always 0 0
op add :mapButton:i :mapButton:i 1
jump 72 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 254 notEqual :mapButton*retval 2
sensor *tmp34 :unlockCoreServer:rCore resource1
op sub *tmp35 *tmp34 resourceQuantity1
setprop resource1 :unlockCoreServer:rCore *tmp35
sensor *tmp36 :unlockCoreServer:rCore resource2
op sub *tmp37 *tmp36 resourceQuantity2
setprop resource2 :unlockCoreServer:rCore *tmp37
sensor *tmp38 :unlockCoreServer:rCore resource3
op sub *tmp39 *tmp38 resourceQuantity3
setprop resource3 :unlockCoreServer:rCore *tmp39
set .coreType @core-shard
op add .buttonCooldown @tick 60
jump 254 always 0 0
jump 197 notEqual null .coreX
jump 111 equal .repairTime null
op sub *tmp43 .repairTime @tick
op div *tmp44 *tmp43 60
op ceil .repairTimeClient *tmp44 0
sync .repairTimeClient
jump 254 lessThanEq @tick .repairTime
op equal *tmp49 .placingPlayer null
op greaterThan *tmp50 @tick .buttonCooldown
op land *tmp51 *tmp49 *tmp50
jump 151 equal *tmp51 false
set :mapButton.1:playerOut .placingPlayer
fetch playerCount :mapButton.1:playerCount @sharded 0 0
set :mapButton.1:i 0
op sub *tmp60 .UIX 4.5
op add *tmp63 .UIX 4.5
jump 144 greaterThan 0 :mapButton.1:playerCount
fetch player :mapButton.1:player @sharded :mapButton.1:i 0
sensor :mapButton.1:cursorX :mapButton.1:player @shootX
sensor :mapButton.1:cursorY :mapButton.1:player @shootY
op greaterThanEq *tmp61 :mapButton.1:cursorX *tmp60
op lessThanEq *tmp64 :mapButton.1:cursorX *tmp63
op land *tmp65 *tmp61 *tmp64
op greaterThanEq *tmp68 :mapButton.1:cursorY -10.5
op land *tmp69 *tmp65 *tmp68
op lessThanEq *tmp72 :mapButton.1:cursorY -7.5
op land :mapButton.1:isHovering *tmp69 *tmp72
sensor :mapButton.1:isClicking :mapButton.1:player @shooting
op land *tmp75 :mapButton.1:isHovering :mapButton.1:isClicking
jump 139 equal *tmp75 false
set :mapButton.1:playerOut :mapButton.1:player
set *tmp53 2
jump 146 always 0 0
jump 142 equal :mapButton.1:isHovering false
set *tmp53 1
jump 146 always 0 0
op add :mapButton.1:i :mapButton.1:i 1
jump 123 lessThanEq :mapButton.1:i :mapButton.1:playerCount
set :mapButton.1:playerOut null
set *tmp53 0
set .placingPlayer :mapButton.1:playerOut
jump 254 notEqual *tmp53 2
op add .placeTimeout @tick 1500
op add .buttonCooldown @tick 60
jump 254 always 0 0
sensor *tmp82 .placingPlayer @shootX
op floor .playerCursorX *tmp82 0
sensor *tmp84 .placingPlayer @shootY
op floor .playerCursorY *tmp84 0
jump 161 lessThanEq @tick .placeTimeout
set .placingPlayer null
set .playerCursorX null
set .playerCursorY null
set .coreX null
set .coreY null
sensor *tmp88 .placingPlayer @shooting
op greaterThan *tmp89 @tick .buttonCooldown
op land *tmp90 *tmp88 *tmp89
jump 254 equal *tmp90 false
sensor *tmp92 .coreType @size
op idiv *tmp302 *tmp92 2
op sub :validPlacement:xStart .playerCursorX *tmp302
op div *tmp304 *tmp92 2
op ceil *tmp305 *tmp304 0
op add *tmp306 .playerCursorX *tmp305
op sub :validPlacement:xEnd *tmp306 1
op sub :validPlacement:yStart .playerCursorY *tmp302
op add *tmp313 .playerCursorY *tmp305
op sub :validPlacement:yEnd *tmp313 1
set :validPlacement:dx :validPlacement:xStart
jump 187 greaterThan :validPlacement:xStart :validPlacement:xEnd
set :validPlacement:dy :validPlacement:yStart
jump 185 greaterThan :validPlacement:yStart :validPlacement:yEnd
getblock block *tmp317 :validPlacement:dx :validPlacement:dy
jump 183 equal *tmp317 @air
set :validPlacement*retval 0
jump 188 always 0 0
op add :validPlacement:dy :validPlacement:dy 1
jump 179 lessThanEq :validPlacement:dy :validPlacement:yEnd
op add :validPlacement:dx :validPlacement:dx 1
jump 177 lessThanEq :validPlacement:dx :validPlacement:xEnd
set :validPlacement*retval 1
jump 254 equal :validPlacement*retval false
op add .landTime @tick 600
op add .buttonCooldown @tick 60
set .coreX .playerCursorX
set .coreY .playerCursorY
set .placingPlayer null
set .playerCursorX null
set .playerCursorY null
jump 254 always 0 0
jump 247 notEqual null .core
op sub *tmp97 .landTime @tick
op div *tmp98 *tmp97 60
op ceil .landTimeClient *tmp98 0
sync .landTimeClient
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp132 .UIX 4.5
op add *tmp135 .UIX 4.5
jump 227 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp133 :mapButton:cursorX *tmp132
op lessThanEq *tmp136 :mapButton:cursorX *tmp135
op land *tmp137 *tmp133 *tmp136
op greaterThanEq *tmp140 :mapButton:cursorY -10.5
op land *tmp141 *tmp137 *tmp140
op lessThanEq *tmp144 :mapButton:cursorY -7.5
op land :mapButton:isHovering *tmp141 *tmp144
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp147 :mapButton:isHovering :mapButton:isClicking
jump 222 equal *tmp147 false
set :mapButton*retval 2
jump 228 always 0 0
jump 225 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 228 always 0 0
op add :mapButton:i :mapButton:i 1
jump 207 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 232 notEqual :mapButton*retval 2
set .coreX null
set .coreY null
op add .buttonCooldown @tick 60
jump 245 lessThanEq @tick .landTime
setblock block .coreType .coreX .coreY @sharded 0
sensor :landCoreServer:coreSize .coreType @size
op add *tmp107 .coreX :landCoreServer:coreSize
op add *tmp108 .coreY :landCoreServer:coreSize
spawn @mace *tmp107 *tmp108 0 @sharded 0
op sub *tmp110 .coreX :landCoreServer:coreSize
spawn @mace *tmp110 *tmp108 0 @sharded 0
op sub *tmp114 .coreY :landCoreServer:coreSize
spawn @mace *tmp110 *tmp114 0 @sharded 0
spawn @mace *tmp107 *tmp114 0 @sharded 0
set .coreEffectTrigger 1
sync .coreEffectTrigger
getblock building .core .coreX .coreY
jump 254 always 0 0
getblock building .core .coreX .coreY
jump 253 notEqual .core null
set .coreX null
set .coreY null
op add .repairTime @tick 3600
jump 254 always 0 0
sensor .coreType .core @type
sync .coreType
sync .coreX
sync .coreY
sync .core
sync .placingPlayer
sync .playerCursorX
sync .playerCursorY
sync .landTimeClient
sync .repairTimeClient
print "[orange] - - - - - - - - \nCore {0}\n\n\n\n\n\n"
format .coreNumberText
makemarker text *tmp0 0 0 false
setmarker fontSize *tmp0 3 0 0
setmarker labelFlags *tmp0 0 1 0
setmarker pos *tmp0 .UIX 3 0
jump 281 equal .coreType .prevCoreType
sensor *tmp265 .coreType @size
effect placeBlockSpark .UIX -4 *tmp265 0 0
setmarker remove .idCoreDisplay 0 0 0
jump 276 notEqual .coreType @core-shard
set .coreTexture "block-core-shard-full"
jump 281 always 0 0
jump 279 notEqual .coreType @core-foundation
set .coreTexture "block-core-foundation-full"
jump 281 always 0 0
jump 281 notEqual .coreType @core-nucleus
set .coreTexture "block-core-nucleus-full"
set .prevCoreType .coreType
jump 286 equal .coreType null
makemarker texture .idCoreDisplay 0 0 false
setmarker texture .idCoreDisplay 0 .coreTexture 0
setmarker pos .idCoreDisplay .UIX -4 0
jump 292 equal .coreEffectTrigger false
set .coreEffectTrigger 0
write .coreX processor1 ".effectX"
write .coreY processor1 ".effectY"
sensor *tmp271 .coreType @size
write *tmp271 processor1 ".coreSize"
jump 368 notEqual null .coreType
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp132 .UIX 4.5
op add *tmp135 .UIX 4.5
jump 318 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp133 :mapButton:cursorX *tmp132
op lessThanEq *tmp136 :mapButton:cursorX *tmp135
op land *tmp137 *tmp133 *tmp136
op greaterThanEq *tmp140 :mapButton:cursorY -10.5
op land *tmp141 *tmp137 *tmp140
op lessThanEq *tmp144 :mapButton:cursorY -7.5
op land :mapButton:isHovering *tmp141 *tmp144
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp147 :mapButton:isHovering :mapButton:isClicking
jump 313 equal *tmp147 false
set :mapButton*retval 2
jump 319 always 0 0
jump 316 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 319 always 0 0
op add :mapButton:i :mapButton:i 1
jump 298 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 322 equal :mapButton*retval 0
print "[blue]"
jump 323 always 0 0
print "[white]"
print "[ Unlock ]\n\n"
fetch core :resourceTooltip:core @sharded 0 0
sensor :resourceTooltip:ownedResources :resourceTooltip:core resource1
set *tmp261 "[green]"
jump 329 lessThanEq resourceQuantity1 :resourceTooltip:ownedResources
set *tmp261 "[red]"
op min *tmp262 :resourceTooltip:ownedResources resourceQuantity1
print *tmp261
print *tmp262
print " / {0} [white]"
format resourceQuantity1
printchar resource1
print "\n"
fetch core :resourceTooltip:core @sharded 0 0
sensor :resourceTooltip:ownedResources :resourceTooltip:core resource2
set *tmp261 "[green]"
jump 341 lessThanEq resourceQuantity2 :resourceTooltip:ownedResources
set *tmp261 "[red]"
op min *tmp262 :resourceTooltip:ownedResources resourceQuantity2
print *tmp261
print *tmp262
print " / {0} [white]"
format resourceQuantity2
printchar resource2
print "\n"
fetch core :resourceTooltip:core @sharded 0 0
sensor :resourceTooltip:ownedResources :resourceTooltip:core resource3
set *tmp261 "[green]"
jump 353 lessThanEq resourceQuantity3 :resourceTooltip:ownedResources
set *tmp261 "[red]"
op min *tmp262 :resourceTooltip:ownedResources resourceQuantity3
print *tmp261
print *tmp262
print " / {0} [white]"
format resourceQuantity3
printchar resource3
print "\n"
setmarker flushText *tmp0 0 0 0
printflush :unlockCoreClient:message1
makemarker text .idCoreDisplay 0 0 false
setmarker fontSize .idCoreDisplay 5 0 0
print "[white]"
setmarker flushText .idCoreDisplay 0 0 0
setmarker pos .idCoreDisplay .UIX -3.25 0
jump 54 always 0 0
jump 452 notEqual null .coreX
jump 373 lessThanEq .repairTimeClient 0
print "[red]Damaged!\n\n[white]Repairs finished\nin {0}..."
format .repairTimeClient
jump 450 always 0 0
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp132 .UIX 4.5
op add *tmp135 .UIX 4.5
jump 398 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp133 :mapButton:cursorX *tmp132
op lessThanEq *tmp136 :mapButton:cursorX *tmp135
op land *tmp137 *tmp133 *tmp136
op greaterThanEq *tmp140 :mapButton:cursorY -10.5
op land *tmp141 *tmp137 *tmp140
op lessThanEq *tmp144 :mapButton:cursorY -7.5
op land :mapButton:isHovering *tmp141 *tmp144
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp147 :mapButton:isHovering :mapButton:isClicking
jump 393 equal *tmp147 false
set :mapButton*retval 2
jump 399 always 0 0
jump 396 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 399 always 0 0
op add :mapButton:i :mapButton:i 1
jump 378 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 402 equal :mapButton*retval 0
print "[blue]"
jump 403 always 0 0
print "[white]"
print "[ Land ]\n\n"
jump 408 equal .placingPlayer null
sensor *tmp284 .placingPlayer @name
print *tmp284
print "[white] is choosing\nthe location."
jump 445 equal .playerCursorX null
makemarker shape .idCorePlace 0 0 false
setmarker rotation .idCorePlace 45 0 0
sensor *tmp287 .coreType @size
op mul *tmp288 *tmp287 6
setmarker radius .idCorePlace *tmp288 0 0
setmarker drawLayer .idCorePlace 100 0 0
setmarker pos .idCorePlace .playerCursorX .playerCursorY 0
sensor :placeCoreClient:shooting .placingPlayer @shooting
op idiv *tmp302 *tmp287 2
op sub :validPlacement:xStart .playerCursorX *tmp302
op div *tmp304 *tmp287 2
op ceil *tmp305 *tmp304 0
op add *tmp306 .playerCursorX *tmp305
op sub :validPlacement:xEnd *tmp306 1
op sub :validPlacement:yStart .playerCursorY *tmp302
op add *tmp313 .playerCursorY *tmp305
op sub :validPlacement:yEnd *tmp313 1
set :validPlacement:dx :validPlacement:xStart
jump 438 greaterThan :validPlacement:xStart :validPlacement:xEnd
set :validPlacement:dy :validPlacement:yStart
jump 436 greaterThan :validPlacement:yStart :validPlacement:yEnd
getblock block *tmp317 :validPlacement:dx :validPlacement:dy
jump 434 equal *tmp317 @air
set :validPlacement*retval 0
jump 439 always 0 0
op add :validPlacement:dy :validPlacement:dy 1
jump 430 lessThanEq :validPlacement:dy :validPlacement:yEnd
op add :validPlacement:dx :validPlacement:dx 1
jump 428 lessThanEq :validPlacement:dx :validPlacement:xEnd
set :validPlacement*retval 1
jump 444 equal :validPlacement*retval false
setmarker color .idCorePlace %ffd37f 0 0
jump 445 equal :placeCoreClient:shooting false
effect placeBlock .playerCursorX .playerCursorY *tmp287 0 0
jump 445 always 0 0
setmarker color .idCorePlace %f9515e 0 0
op equal *tmp295 .playerCursorX null
op equal *tmp296 .coreX null
op land *tmp297 *tmp295 *tmp296
jump 450 equal *tmp297 false
setmarker remove .idCorePlace 0 0 0
setmarker flushText *tmp0 0 0 0
jump 54 always 0 0
jump 490 notEqual null .core
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp132 .UIX 4.5
op add *tmp135 .UIX 4.5
jump 478 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp133 :mapButton:cursorX *tmp132
op lessThanEq *tmp136 :mapButton:cursorX *tmp135
op land *tmp137 *tmp133 *tmp136
op greaterThanEq *tmp140 :mapButton:cursorY -10.5
op land *tmp141 *tmp137 *tmp140
op lessThanEq *tmp144 :mapButton:cursorY -7.5
op land :mapButton:isHovering *tmp141 *tmp144
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp147 :mapButton:isHovering :mapButton:isClicking
jump 473 equal *tmp147 false
set :mapButton*retval 2
jump 479 always 0 0
jump 476 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 479 always 0 0
op add :mapButton:i :mapButton:i 1
jump 458 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 482 equal :mapButton*retval 0
print "[blue]"
jump 483 always 0 0
print "[white]"
setmarker pos .idCorePlace .coreX .coreY 0
print "[ Cancel ]\n\n[white]Landing at\n{0}, {0} in {0}..."
format .coreX
format .coreY
format .landTimeClient
setmarker flushText *tmp0 0 0 0
jump 54 always 0 0
print "[gold]Landed!"
setmarker remove .idCorePlace 0 0 0
setmarker flushText *tmp0 0 0 0
jump 54 always 0 0
jump 0 equal @client false
print "[orange] - - - - - - - - \nCore {0}\n\n\n\n\n\n"
format .coreNumberText
makemarker text *tmp0 0 0 false
setmarker fontSize *tmp0 3 0 0
setmarker labelFlags *tmp0 0 1 0
setmarker pos *tmp0 .UIX 3 0
jump 513 equal .coreType .prevCoreType
sensor *tmp265 .coreType @size
effect placeBlockSpark .UIX -4 *tmp265 0 0
setmarker remove .idCoreDisplay 0 0 0
jump 508 notEqual .coreType @core-shard
set .coreTexture "block-core-shard-full"
jump 513 always 0 0
jump 511 notEqual .coreType @core-foundation
set .coreTexture "block-core-foundation-full"
jump 513 always 0 0
jump 513 notEqual .coreType @core-nucleus
set .coreTexture "block-core-nucleus-full"
set .prevCoreType .coreType
jump 518 equal .coreType null
makemarker texture .idCoreDisplay 0 0 false
setmarker texture .idCoreDisplay 0 .coreTexture 0
setmarker pos .idCoreDisplay .UIX -4 0
jump 524 equal .coreEffectTrigger false
set .coreEffectTrigger 0
write .coreX processor1 ".effectX"
write .coreY processor1 ".effectY"
sensor *tmp271 .coreType @size
write *tmp271 processor1 ".coreSize"
jump 600 notEqual null .coreType
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp132 .UIX 4.5
op add *tmp135 .UIX 4.5
jump 550 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp133 :mapButton:cursorX *tmp132
op lessThanEq *tmp136 :mapButton:cursorX *tmp135
op land *tmp137 *tmp133 *tmp136
op greaterThanEq *tmp140 :mapButton:cursorY -10.5
op land *tmp141 *tmp137 *tmp140
op lessThanEq *tmp144 :mapButton:cursorY -7.5
op land :mapButton:isHovering *tmp141 *tmp144
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp147 :mapButton:isHovering :mapButton:isClicking
jump 545 equal *tmp147 false
set :mapButton*retval 2
jump 551 always 0 0
jump 548 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 551 always 0 0
op add :mapButton:i :mapButton:i 1
jump 530 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 554 equal :mapButton*retval 0
print "[blue]"
jump 555 always 0 0
print "[white]"
print "[ Unlock ]\n\n"
fetch core :resourceTooltip:core @sharded 0 0
sensor :resourceTooltip:ownedResources :resourceTooltip:core resource1
set *tmp261 "[green]"
jump 561 lessThanEq resourceQuantity1 :resourceTooltip:ownedResources
set *tmp261 "[red]"
op min *tmp262 :resourceTooltip:ownedResources resourceQuantity1
print *tmp261
print *tmp262
print " / {0} [white]"
format resourceQuantity1
printchar resource1
print "\n"
fetch core :resourceTooltip:core @sharded 0 0
sensor :resourceTooltip:ownedResources :resourceTooltip:core resource2
set *tmp261 "[green]"
jump 573 lessThanEq resourceQuantity2 :resourceTooltip:ownedResources
set *tmp261 "[red]"
op min *tmp262 :resourceTooltip:ownedResources resourceQuantity2
print *tmp261
print *tmp262
print " / {0} [white]"
format resourceQuantity2
printchar resource2
print "\n"
fetch core :resourceTooltip:core @sharded 0 0
sensor :resourceTooltip:ownedResources :resourceTooltip:core resource3
set *tmp261 "[green]"
jump 585 lessThanEq resourceQuantity3 :resourceTooltip:ownedResources
set *tmp261 "[red]"
op min *tmp262 :resourceTooltip:ownedResources resourceQuantity3
print *tmp261
print *tmp262
print " / {0} [white]"
format resourceQuantity3
printchar resource3
print "\n"
setmarker flushText *tmp0 0 0 0
printflush :unlockCoreClient:message1
makemarker text .idCoreDisplay 0 0 false
setmarker fontSize .idCoreDisplay 5 0 0
print "[white]"
setmarker flushText .idCoreDisplay 0 0 0
setmarker pos .idCoreDisplay .UIX -3.25 0
jump 495 always 0 0
jump 684 notEqual null .coreX
jump 605 lessThanEq .repairTimeClient 0
print "[red]Damaged!\n\n[white]Repairs finished\nin {0}..."
format .repairTimeClient
jump 682 always 0 0
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp132 .UIX 4.5
op add *tmp135 .UIX 4.5
jump 630 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp133 :mapButton:cursorX *tmp132
op lessThanEq *tmp136 :mapButton:cursorX *tmp135
op land *tmp137 *tmp133 *tmp136
op greaterThanEq *tmp140 :mapButton:cursorY -10.5
op land *tmp141 *tmp137 *tmp140
op lessThanEq *tmp144 :mapButton:cursorY -7.5
op land :mapButton:isHovering *tmp141 *tmp144
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp147 :mapButton:isHovering :mapButton:isClicking
jump 625 equal *tmp147 false
set :mapButton*retval 2
jump 631 always 0 0
jump 628 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 631 always 0 0
op add :mapButton:i :mapButton:i 1
jump 610 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 634 equal :mapButton*retval 0
print "[blue]"
jump 635 always 0 0
print "[white]"
print "[ Land ]\n\n"
jump 640 equal .placingPlayer null
sensor *tmp284 .placingPlayer @name
print *tmp284
print "[white] is choosing\nthe location."
jump 677 equal .playerCursorX null
makemarker shape .idCorePlace 0 0 false
setmarker rotation .idCorePlace 45 0 0
sensor *tmp287 .coreType @size
op mul *tmp288 *tmp287 6
setmarker radius .idCorePlace *tmp288 0 0
setmarker drawLayer .idCorePlace 100 0 0
setmarker pos .idCorePlace .playerCursorX .playerCursorY 0
sensor :placeCoreClient:shooting .placingPlayer @shooting
op idiv *tmp302 *tmp287 2
op sub :validPlacement:xStart .playerCursorX *tmp302
op div *tmp304 *tmp287 2
op ceil *tmp305 *tmp304 0
op add *tmp306 .playerCursorX *tmp305
op sub :validPlacement:xEnd *tmp306 1
op sub :validPlacement:yStart .playerCursorY *tmp302
op add *tmp313 .playerCursorY *tmp305
op sub :validPlacement:yEnd *tmp313 1
set :validPlacement:dx :validPlacement:xStart
jump 670 greaterThan :validPlacement:xStart :validPlacement:xEnd
set :validPlacement:dy :validPlacement:yStart
jump 668 greaterThan :validPlacement:yStart :validPlacement:yEnd
getblock block *tmp317 :validPlacement:dx :validPlacement:dy
jump 666 equal *tmp317 @air
set :validPlacement*retval 0
jump 671 always 0 0
op add :validPlacement:dy :validPlacement:dy 1
jump 662 lessThanEq :validPlacement:dy :validPlacement:yEnd
op add :validPlacement:dx :validPlacement:dx 1
jump 660 lessThanEq :validPlacement:dx :validPlacement:xEnd
set :validPlacement*retval 1
jump 676 equal :validPlacement*retval false
setmarker color .idCorePlace %ffd37f 0 0
jump 677 equal :placeCoreClient:shooting false
effect placeBlock .playerCursorX .playerCursorY *tmp287 0 0
jump 677 always 0 0
setmarker color .idCorePlace %f9515e 0 0
op equal *tmp295 .playerCursorX null
op equal *tmp296 .coreX null
op land *tmp297 *tmp295 *tmp296
jump 682 equal *tmp297 false
setmarker remove .idCorePlace 0 0 0
setmarker flushText *tmp0 0 0 0
jump 495 always 0 0
jump 722 notEqual null .core
fetch playerCount :mapButton:playerCount @sharded 0 0
set :mapButton:i 0
op sub *tmp132 .UIX 4.5
op add *tmp135 .UIX 4.5
jump 710 greaterThan 0 :mapButton:playerCount
fetch player :mapButton:player @sharded :mapButton:i 0
sensor :mapButton:cursorX :mapButton:player @shootX
sensor :mapButton:cursorY :mapButton:player @shootY
op greaterThanEq *tmp133 :mapButton:cursorX *tmp132
op lessThanEq *tmp136 :mapButton:cursorX *tmp135
op land *tmp137 *tmp133 *tmp136
op greaterThanEq *tmp140 :mapButton:cursorY -10.5
op land *tmp141 *tmp137 *tmp140
op lessThanEq *tmp144 :mapButton:cursorY -7.5
op land :mapButton:isHovering *tmp141 *tmp144
sensor :mapButton:isClicking :mapButton:player @shooting
op land *tmp147 :mapButton:isHovering :mapButton:isClicking
jump 705 equal *tmp147 false
set :mapButton*retval 2
jump 711 always 0 0
jump 708 equal :mapButton:isHovering false
set :mapButton*retval 1
jump 711 always 0 0
op add :mapButton:i :mapButton:i 1
jump 690 lessThanEq :mapButton:i :mapButton:playerCount
set :mapButton*retval 0
jump 714 equal :mapButton*retval 0
print "[blue]"
jump 715 always 0 0
print "[white]"
setmarker pos .idCorePlace .coreX .coreY 0
print "[ Cancel ]\n\n[white]Landing at\n{0}, {0} in {0}..."
format .coreX
format .coreY
format .landTimeClient
setmarker flushText *tmp0 0 0 0
jump 495 always 0 0
print "[gold]Landed!"
setmarker remove .idCorePlace 0 0 0
setmarker flushText *tmp0 0 0 0
jump 495 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

