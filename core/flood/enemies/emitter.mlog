set startingDelay 600
op add *tmp1 @thisx @thisy
op add *tmp3 *tmp1 1
op mul *tmp4 *tmp1 *tmp3
op div *tmp5 *tmp4 2
op add *tmp6 *tmp5 @thisy
op mul *tmp0 *tmp6 1000
setrate 100
getlink :link 0
sensor *tmp9 :link @x
sensor *tmp10 :link @y
getblock building .emitter *tmp9 *tmp10
sensor :isEmitter:type .emitter @type
sensor *tmp244 :isEmitter:type @id
jump 17 greaterThanEq *tmp244 93
jump 23 greaterThanEq *tmp244 90
jump 25 always 0 0
jump 22 greaterThanEq *tmp244 173
jump 23 equal *tmp244 135
jump 23 equal *tmp244 136
jump 23 equal *tmp244 158
jump 25 always 0 0
jump 25 greaterThanEq *tmp244 175
set *tmp13 1
jump 26 always 0 0
set *tmp13 0
jump 9 equal *tmp13 false
sensor *tmp17 .emitter @x
sensor *tmp18 .emitter @y
getblock floor .floorPrev *tmp17 *tmp18
jump 32 notEqual .floorPrev @empty
set .floorPrev @stone
jump 140 equal @server false
jump 35 equal @client false
end
jump 104 greaterThanEq @second startingDelay
set :server:activate 0
fetch unitCount *tmp28 @sharded 0 null
set :server:i 0
jump 66 greaterThan 0 *tmp28
fetch unit :server:unit @sharded :server:i null
sensor *tmp30 :server:unit @x
sensor *tmp31 .emitter @x
op sub *tmp32 *tmp30 *tmp31
sensor *tmp33 :server:unit @y
sensor *tmp34 .emitter @y
op sub *tmp35 *tmp33 *tmp34
op len *tmp36 *tmp32 *tmp35
sensor *tmp37 :server:unit @range
op lessThanEq *tmp38 *tmp36 *tmp37
sensor :isCoreUnit:type :server:unit @type
jump 57 equal :isCoreUnit:type @alpha
jump 57 equal :isCoreUnit:type @beta
jump 57 equal :isCoreUnit:type @gamma
jump 57 equal :isCoreUnit:type @evoke
jump 57 equal :isCoreUnit:type @incite
jump 59 notEqual :isCoreUnit:type @emanate
set *tmp40 1
jump 60 always 0 0
set *tmp40 0
op equal *tmp43 *tmp40 false
op land *tmp44 *tmp38 *tmp43
jump 64 equal *tmp44 false
set :server:activate 1
op add :server:i :server:i 1
jump 40 lessThanEq :server:i *tmp28
fetch unitCount *tmp28 @crux 0 null
set :server:i 0
jump 95 greaterThan 0 *tmp28
fetch unit :server:unit @crux :server:i null
sensor *tmp30 :server:unit @x
sensor *tmp31 .emitter @x
op sub *tmp32 *tmp30 *tmp31
sensor *tmp33 :server:unit @y
sensor *tmp34 .emitter @y
op sub *tmp35 *tmp33 *tmp34
op len *tmp36 *tmp32 *tmp35
sensor *tmp37 :server:unit @range
op lessThanEq *tmp38 *tmp36 *tmp37
sensor :isCoreUnit:type :server:unit @type
jump 86 equal :isCoreUnit:type @alpha
jump 86 equal :isCoreUnit:type @beta
jump 86 equal :isCoreUnit:type @gamma
jump 86 equal :isCoreUnit:type @evoke
jump 86 equal :isCoreUnit:type @incite
jump 88 notEqual :isCoreUnit:type @emanate
set *tmp40 1
jump 89 always 0 0
set *tmp40 0
op equal *tmp43 *tmp40 false
op land *tmp44 *tmp38 *tmp43
jump 93 equal *tmp44 false
set :server:activate 1
op add :server:i :server:i 1
jump 69 lessThanEq :server:i *tmp28
jump 100 notEqual :server:activate false
sensor *tmp48 .emitter @x
sensor *tmp49 .emitter @y
setblock floor @empty *tmp48 *tmp49 0 0
jump 108 always 0 0
sensor *tmp50 .emitter @x
sensor *tmp51 .emitter @y
setblock floor .floorPrev *tmp50 *tmp51 0 0
jump 108 always 0 0
sensor *tmp52 .emitter @x
sensor *tmp53 .emitter @y
setblock floor .floorPrev *tmp52 *tmp53 0 0
setrate 10
set .serverTime @second
sync .serverTime
sensor *tmp217 .emitter @dead
jump 115 equal *tmp217 false
setmarker remove *tmp0 0 0 0
setrate 10
end
jump 138 greaterThan .serverTime startingDelay
sensor :client:emitterX .emitter @x
sensor :client:emitterY .emitter @y
makemarker text *tmp0 0 0 false
setmarker autoscale *tmp0 true 0 0
sensor *tmp223 .emitter @size
op sub *tmp224 :client:emitterY *tmp223
setmarker pos *tmp0 :client:emitterX *tmp224 0
op sub :formatTime:time startingDelay .serverTime
op div *tmp228 :formatTime:time 60
op mod *tmp229 *tmp228 60
op floor :formatTime:minutes *tmp229 0
op mod *tmp231 :formatTime:time 60
op floor :formatTime:seconds *tmp231 0
jump 131 greaterThanEq :formatTime:minutes 10
print "0"
print :formatTime:minutes
print ":"
jump 135 greaterThanEq :formatTime:seconds 10
print "0"
print :formatTime:seconds
setmarker flushText *tmp0 0 0 0
jump 33 always 0 0
setmarker remove *tmp0 0 0 0
jump 33 always 0 0
jump 0 equal @client false
sensor *tmp217 .emitter @dead
jump 146 equal *tmp217 false
setmarker remove *tmp0 0 0 0
setrate 10
end
jump 169 greaterThan .serverTime startingDelay
sensor :client:emitterX .emitter @x
sensor :client:emitterY .emitter @y
makemarker text *tmp0 0 0 false
setmarker autoscale *tmp0 true 0 0
sensor *tmp223 .emitter @size
op sub *tmp224 :client:emitterY *tmp223
setmarker pos *tmp0 :client:emitterX *tmp224 0
op sub :formatTime:time startingDelay .serverTime
op div *tmp228 :formatTime:time 60
op mod *tmp229 *tmp228 60
op floor :formatTime:minutes *tmp229 0
op mod *tmp231 :formatTime:time 60
op floor :formatTime:seconds *tmp231 0
jump 162 greaterThanEq :formatTime:minutes 10
print "0"
print :formatTime:minutes
print ":"
jump 166 greaterThanEq :formatTime:seconds 10
print "0"
print :formatTime:seconds
setmarker flushText *tmp0 0 0 0
jump 141 always 0 0
setmarker remove *tmp0 0 0 0
jump 141 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

